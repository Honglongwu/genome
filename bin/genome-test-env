#!/usr/bin/env bash

set -o errexit
set -o pipefail
set -o nounset

GIT_DIR=$(git rev-parse --show-toplevel 2> /dev/null || true)

if [ -z "${GIT_DIR}" ]; then
    echo "ERROR: Make sure you are in a git repo!"
    exit 128
fi

if [ ! -f "${GIT_DIR}/lib/perl/Genome.pm" ]; then
    echo "ERROR: Make sure you are in a Genome workspace!"
    exit 128
fi

export WORKSPACE="${GIT_DIR}"
ORIG_PWD="${PWD}"
cd "${WORKSPACE}"

export GENOMECI_BASEDIR=/gsc/scripts/opt/genome
$GENOMECI_BASEDIR/bin/model-test-prep-multi '5.10'
source $GENOMECI_BASEDIR/bin/model-test-env.sh "${WORKSPACE}"

if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
    hash -r 2>/dev/null
fi

cd "$ORIG_PWD"

echo ''
echo "Perl: $(perl -e 'printf(qq(%vd\n), $^V)')"
echo "Prove: $(prove --version)"
echo "UR: $(wtf UR | head -n 1)"
echo "Workflow: $(wtf Workflow | head -n 1)"
echo "Genome: $(wtf Genome | head -n 1)"
echo ''

unset GENOME_QUERY_POSTGRES
unset PROMPT_COMMAND
export PS1="(Genome Test Env) \w $ "
export UR_DBI_NO_COMMIT=1

if [ $# -gt 0 ]; then
    echo "$@"...
    exec "$@"
else
    if [ -n "$BASH" ]; then
        echo 'Press <Ctrl>-D or type `logout` to return to normal environment.'
        echo ''
        exec bash --norc --noprofile
    else
        echo 'Only `bash` shells are supported at this time.'
        exit 128
    fi
fi
