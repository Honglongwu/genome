#!/usr/bin/env genome-perl

BEGIN { 
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use strict;
use warnings;

use above 'Genome';
use Test::Exception;
use Test::More;

my $pkg = 'Genome::File::BamReadcount::IndexedReader';
use_ok($pkg);

my $test_dir = __FILE__.".d";
my $input_file = File::Spec->join($test_dir, "in.brct");

subtest 'read two in order' => sub {
    my $reader = $pkg->new($input_file);
    my $entry1 = $reader->get_entry(21, 1);
    my $entry2 = $reader->get_entry(21, 2);
    is($entry1->{_position}, 1, "Entry 1 is correct");
    is($entry2->{_position}, 2, "Entry 2 is correct");
};

subtest 'read two out of order' => sub {
    my $reader = $pkg->new($input_file);
    my $entry2 = $reader->get_entry(21, 2);
    my $entry1 = $reader->get_entry(21, 1);
    is($entry1->{_position}, 1, "Entry 1 is correct");
    is($entry2->{_position}, 2, "Entry 2 is correct");
};

subtest 'read two across a chromosome boundary' => sub {
    my $reader = $pkg->new($input_file);
    my $entry3 = $reader->get_entry(21, 3);
    my $entry2 = $reader->get_entry(22, 2);
    is($entry3->{_position}, 3, "Entry 3 is correct");
    is($entry2->{_position}, 2, "Entry 2 is correct");
};

subtest 'read something not in the file' => sub {
    my $reader = $pkg->new($input_file);
    my $entry1 = $reader->get_entry(21, 4);
    is($entry1, undef, "Can't get something not in the file");
};

subtest 'read something past the end of the file' => sub {
    my $reader = $pkg->new($input_file);
    my $entry1 = $reader->get_entry('X', 5);
    is($entry1, undef, "Can't get something not in the file");
};

subtest 'read chromosome out of order' => sub {
    my $reader = $pkg->new($input_file);
    my $entry1 = $reader->get_entry(22, 2);
    dies_ok(sub {$reader->get_entry(21, 1)}, "Can't read an entry whose chromosome has already been read");
};

subtest 'read positions out of order beyond buffer' => sub {
    my $reader = $pkg->new($input_file);
    my $entry1 = $reader->get_entry(21, 3);
    dies_ok(sub {$reader->get_entry(21, 1)}, "Can't read back more than one");
};

done_testing;

