#!/usr/bin/env genome-perl

use strict;
use warnings;

use above 'Genome';
use Genome::Test::Factory::Model::ReferenceAlignment;
use Test::More;

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
};

my $test_class = 'Genome::ModelGroup::Command::Copy';
use_ok($test_class);

my $group = Genome::ModelGroup->__define__(name => 'test model-group for copy command');
my $model = Genome::Test::Factory::Model::ReferenceAlignment->setup_object;
$group->assign_models($model);

my $to_name = 'testing copy command';
my $cmd = $test_class->create(
    from => $group,
    to => $to_name,
);
isa_ok($cmd, $test_class,'created copy command');

ok($cmd->execute, 'ran copy command');

my $to_model_group = Genome::ModelGroup->get(name => $to_name);
isa_ok($to_model_group, "Genome::ModelGroup", "Destination model group found");
my @from_models = $group->models;
my @to_models = $to_model_group->models;

is(scalar(@from_models), scalar(@to_models), "Both model groups have the same number of models");

for (my $i=0; $i <= $#from_models; $i++) {
    is($from_models[$i]->id, $to_models[$i]->id, "Both model groups have the same model ids");
}

done_testing();
