#!/usr/bin/env genome-perl

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
    $ENV{UR_COMMAND_DUMP_STATUS_MESSAGES} = 1;
}

use strict;
use warnings;

use above "Genome";

use Genome::Utility::Test 'compare_ok';
use Test::More;

use_ok('Genome::InstrumentData::Command::Import::GenerateSourceFilesTsvForReimport') or die;

my $test_dir = Genome::Utility::Test->data_dir_ok('Genome::InstrumentData::Command::Import::GenerateSourceFilesTsvForReimport', 'v1');
#my $source_files_tsv = $test_dir.'/source-files.tsv';

my $library = Genome::Library->__define__(name => '__TEST_LIBRARY__');
my @instrument_data;
my $instdata_id = -100;
for my $format (qw/ bam fastq /) {
    my $instrument_data = Genome::InstrumentData::Imported->create(
        id => --$instdata_id,
        library => $library,
        subset_name => '2-AAXXAA',
        import_format => $format,
        user_name => 'apipe-builder',
        run_name => 'hiseq',
        lane => 2,
        original_data_path => '/a/'.$format,
        random => 'yep',
    );
    die 'Failed to create instrument data' if not $instrument_data;

    my $volume = Genome::Disk::Volume->get(mount_path => $test_dir);
    if ( not $volume ) {
        $volume = Genome::Disk::Volume->__define__(mount_path => $test_dir, disk_status => 'active');
    }

    my $alloc = Genome::Disk::Allocation->__define__(
        owner => $instrument_data,
        mount_path => $volume->mount_path,
        group_subdirectory => $format,
        allocation_path => '',
    );
    die "Failed to define allocation for genotype file!" if not $alloc;

    push @instrument_data, $instrument_data;
}

my $tmpdir = File::Temp::tempdir(CLEANUP => 1);
my $source_files_tsv = $tmpdir.'/source_files.tsv';

my $generate = Genome::InstrumentData::Command::Import::GenerateSourceFilesTsvForReimport->create(
    instrument_data => \@instrument_data,
    source_files_tsv => $source_files_tsv,
);
ok($generate, 'create source files tsv generator');
ok($generate->execute, 'execute');
compare_ok($source_files_tsv, $test_dir.'/source_files.tsv', 'source files tsv matches');
#print "$source_files_tsv\n"; <STDIN>;

done_testing();
