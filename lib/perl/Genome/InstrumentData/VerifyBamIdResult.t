#!/usr/bin/env genome-perl

BEGIN { 
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use strict;
use warnings;

use above "Genome";
use Test::More;
use Genome::Utility::Test;
use Genome::Test::Factory::InstrumentData::Solexa;
use Genome::Test::Factory::Model::GenotypeMicroarray;
use Genome::Test::Factory::Build;

my $package = "Genome::InstrumentData::VerifyBamIdResult";

use_ok($package);

my $test_dir = Genome::Utility::Test->data_dir_ok($package, "v1");

my $instrument_data_1 = Genome::Test::Factory::InstrumentData::Solexa->setup_object(
    bam_path => File::Spec->join($test_dir, "1.bam"));

my $model = Genome::Test::Factory::Model::GenotypeMicroarray->setup_object();

my $tmp_dir = Genome::Sys->create_temp_directory;
Genome::Sys->copy_file(File::Spec->join($test_dir,"1.vcf"), 
            File::Spec->join($tmp_dir, $model->subject->id.".original.vcf"));

my $build = Genome::Test::Factory::Build->setup_object(  
    model_id => $model->id,
    data_directory => $tmp_dir);

my $nonautosomal_bed = File::Spec->join($test_dir, "nonautosomal.bed");
my $nonautosomal_feature_list = Genome::FeatureList->create(
    file_path => $nonautosomal_bed,
    file_content_hash => Genome::Sys->md5sum($nonautosomal_bed),
);

my $on_target_bed = File::Spec->join($test_dir, "on_target.bed");
my $on_target_feature_list = Genome::FeatureList->create(
    file_path => $on_target_bed,
    file_content_hash => Genome::Sys->md5sum($on_target_bed),
);

my $sr = Genome::InstrumentData::VerifyBamIdResult->create(
    instrument_data_id => $instrument_data_1->id,
    genotype_build_id => $build->id,
    non_autosomal_list => $nonautosomal_feature_list,
    on_target_list => $on_target_feature_list,
    max_depth => 20,
    precise => 0,
    version => "20120620",
);
#my $data_dir = $sr->output_dir;
#my $out = `ls $data_dir`;
#print $out;
#$out = `cat $data_dir/*.selfSM`;
#print $out;
ok($sr, "Software result was created ok");

done_testing;
