#!/usr/bin/env genome-perl

BEGIN {
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_COMMAND_DUMP_STATUS_MESSAGES} = 1;
}

use strict;
use warnings;

use above "Genome";

use Test::More;

use_ok('Genome::InstrumentData::Microarray') or die;

my $l = Genome::Library->get(sample_id=>2850539269,name=>'TEST-patient1-sample1-lib1');
ok($l, 'got library');

my $instrument_data = Genome::InstrumentData::Imported->create(library_id => $l->id); 
ok($instrument_data, 'created dummy instrument data');

my $test_file1 = $ENV{GENOME_TEST_INPUTS} . '/Genome-InstrumentData-Microarray/test_genotype_file1';
test_with_file($instrument_data, $test_file1);
# works also if there is already an existing gentoype_file associated with the instrument_data...
my $test_file2 = $ENV{GENOME_TEST_INPUTS} . '/Genome-InstrumentData-Microarray/test_genotype_file2';
test_with_file($instrument_data, $test_file2);

done_testing();


#   This instrument_data has no genotype_file attribute
# should copy new one fine and make new genotype_file attribute
sub test_with_file {
    my ($instrument_data, $test_file) = @_;
    my $new_genotype_file = Genome::InstrumentData::Microarray->update_genotype_file($instrument_data, $test_file);
    ok($new_genotype_file, 'new_genotype_file was created');

    # get genotype_file attribute from instrument_data object.
    my @genotype_file_attributes = $instrument_data->attributes(attribute_label => 'genotype_file');
    is(scalar (@genotype_file_attributes), 1, 'found exactly one genotype_file_attribute');

    my $genotype_file_attribute = $genotype_file_attributes[0];
    is($genotype_file_attribute->attribute_value, $new_genotype_file, 'attribute points to new genotype_file'); 
    isnt($genotype_file_attribute->attribute_value, $test_file, 'attribute does not point to old genotype_file');
}
