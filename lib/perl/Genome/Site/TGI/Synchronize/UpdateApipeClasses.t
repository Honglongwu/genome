#! /gsc/bin/perl

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
    $ENV{UR_COMMAND_DUMP_STATUS_MESSAGES} = 1;
}

use strict;
use warnings;

use above 'Genome';

use Data::Dumper 'Dumper';
use Test::More;

use_ok('Genome::Site::TGI::Synchronize::UpdateApipeClasses') or die;
use_ok('Genome::Site::TGI::Synchronize::Classes::IndexIllumina') or die;
use_ok('Genome::Site::TGI::Synchronize::Classes::LibrarySummary') or die;

my $uac = Genome::Site::TGI::Synchronize::UpdateApipeClasses->create;
ok($uac, 'create update apipe classes');

for my $test ( tests() ) {
    my $gsc_class = $test->{gsc_class};
    my $params = $test->{params};
    my $gsc_obj = $gsc_class->create(%$params);
    my $genome_class = $test->{genome_class};
    my $genome_get_params = $test->{genome_get_params} || { id => $gsc_obj->id };
    my $genome_obj = $genome_class->get(%$genome_get_params);
    $uac->instrument_data_with_successful_pidfas->{$gsc_obj->id} = 1 if $genome_class =~ /Solexa$/;
    ok(!$genome_obj, "$genome_class data does not exist for $gsc_class for id ".$gsc_obj->id);
    my $method = $test->{method};
    ok($uac->$method($gsc_obj, $genome_class), $method);
    $genome_obj = $genome_class->get(%$genome_get_params);
    ok($genome_obj, "$genome_class exists for $gsc_class id ".$gsc_obj->id) or die;

    next if $test->{genome_get_params}; # skip if we have explicit params

    for my $name ( keys %$params ) {
        my $param_value = $params->{$name} // 'NULL';
        my $gsc_value = $gsc_obj->$name // 'NULL';
        is($gsc_value, $param_value, $gsc_class.' '.$gsc_obj->id.' '.$name.' is '.$param_value);
        my $genome_value = eval{ $genome_obj->$name; };
        $genome_value = eval{ $genome_obj->attributes(attribute_label => $name)->attribute_value; } if not defined $genome_value;
        $genome_value //= 'NULL';
        is($genome_value, $gsc_value, $genome_class.' '.$genome_obj->id.' '.$name.' is '.$gsc_value);
    }
}

done_testing();

###

sub tests {
    # Ask ebelter/fdu about how to add a test if you'd like to add one
    return (
        {
            gsc_class => 'Genome::Site::TGI::Synchronize::Classes::LibrarySummary',
            genome_class => 'Genome::Library',
            method => '_create_librarysummary',
            params => {
                id => -2889531422,
                name => 'H_LA-9315-3290.1-cDNA-1-lib4',
                sample_id => 2887788990,
                protocol => 'Ovation SP Ultralow DR',
                original_insert_size => '300-500',
                library_insert_size => '325',
            },
        },
        {
            gsc_class => 'Genome::Site::TGI::Synchronize::Classes::IndexIllumina',
            genome_class => 'Genome::InstrumentData::Solexa',
            method => '_create_indexillumina',
            params => {
                id => -2889838607,
                analysis_software_version => 'CASAVA-1.8.2',
                fwd_read_length => '150',
                fwd_seq_id => undef,
                library_id => '2889531422',
                gc_bias_path => undef,
                clusters => '2057469',
                lane => '1',
                target_region_set_name => undef,
                adaptor_path => '/gscmnt/sata114/info/medseq/adaptor_sequences/solexa_adaptor_pcr_primer',
                fwd_run_type => 'Paired End Read 1',
                run_type => 'Paired',
                fwd_kilobases_read => '308620350',
                fwd_clusters => '2057469',
                rev_clusters => '2057469',
                fwd_filt_aligned_clusters_pct => '0',
                gerald_directory => '/gscmnt/gc1500/production/Unaligned_lane_1_131628932/Project_Dummy/Sample_lane1_TTCAGC',
                archive_path => undef,
                read_length => '150',
                rev_filt_error_rate_avg => undef,
                rev_read_length => '150',
                run_name => '121130_HWI-M00678_131575527_A23R6',
                rev_seq_id => undef,
                rev_filt_aligned_clusters_pct => '0',
                subset_name => '1-TTCAGC',
                flow_cell_id => 'A23R6',
                fastqc_path => '/gscmnt/sata162/production/A23R6/L001/TTCAGC/fastqc',
                index_sequence => 'TTCAGC',
                bam_path => '/gscmnt/gc6001/production/csf_131629071/gerald_A23R6_1_TTCAGC.bam',
                is_external => '0',
                median_insert_size => undef,
                filt_error_rate_avg => undef,
                rev_kilobases_read => '308620350',
                sd_above_insert_size => undef,
                sd_below_insert_size => undef,
                fwd_filt_error_rate_avg => undef,
                rev_run_type => 'Paired End Read 2',
            },
        },
        {
            gsc_class => 'Genome::Site::TGI::Synchronize::Classes::LimsProject',
            genome_class => 'Genome::Project',
            method => '_create_limsproject',
            params => {
                id => -101,
                name => '__LIMS_PROJECT__',
            },
        },
        {
            gsc_class => 'Genome::Site::TGI::Synchronize::Classes::LimsProjectSample',
            genome_class => 'Genome::ProjectPart',
            method => '_create_limsprojectsample',
            params => {
                project_id => -102,
                sample_id => -103,
            },
            genome_get_params => {
                project_id => -102,
                entity_id => -103,
                entity_class_name => 'Genome::Sample',
                label => 'sample',
            },
        },
        {
            gsc_class => 'Genome::Site::TGI::Synchronize::Classes::LimsProjectInstrumentData',
            genome_class => 'Genome::ProjectPart',
            method => '_create_limsprojectinstrumentdata',
            params => {
                project_id => -104,
                instrument_data_id => -105,
            },
            genome_get_params => {
                project_id => -104,
                entity_id => -105,
                entity_class_name => 'Genome::InstrumentData',
                label => 'instrument_data',
            },
        },
    );
}
