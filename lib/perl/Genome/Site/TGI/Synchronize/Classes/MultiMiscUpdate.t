#!/usr/bin/env genome-perl

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
    $ENV{UR_COMMAND_DUMP_STATUS_MESSAGES} = 1;
};

use strict;
use warnings;

use above 'Genome';

use Test::More;

use_ok('Genome::Site::TGI::Synchronize::Classes::MultiMiscUpdate') or die;

my @multi_misc_updates = _define_multiple_misc_updates();
ok(@multi_misc_updates, 'Define multi misc updates');
is(@multi_misc_updates, 4, 'Defined 4 multi misc updates');
is(scalar( map { $_->misc_updates } @multi_misc_updates), 12, 'Defined 12 misc updates');
for my $multi_misc_update ( @multi_misc_updates ) {
    ok($multi_misc_update->perform_update, 'perfromed update: '.$multi_misc_update->description);
    my %genome_enitity_params = $multi_misc_update->genome_enitity_params;
    ok(%genome_enitity_params, 'Got genome entity params');
    is(scalar(keys %genome_enitity_params), 4, 'Correct number of genome entity params');
    my $genome_enitity = Genome::SubjectAttribute->get(%genome_enitity_params);
    if ( $multi_misc_update->description eq 'INSERT' ) {
        ok($genome_enitity, 'INSERT genome entity: '.$genome_enitity->__display_name__);
    }
    else {
        ok(!$genome_enitity, 'DELETE genome entity: '.$multi_misc_update->__display_name__);
    }
}

done_testing();
exit;

sub _define_multiple_misc_updates {
    my %subject_class_names_to_properties= (
        population_group_member => [qw/ pg_id member_id /],
        sample_attribute => [qw/ organism_sample_id attribute_label attribute_value nomenclature /],
    );
   
    my $cnt = 0;
    my @misc_updates;
    for my $update ( [ 'population_group_member', -100, -101, ], [ 'sample_attribute', -100, 'foo', 'bar', 'baz',  ], ) {
        my ($subject_class_name, @ids) = @$update;
        my $subject_id = join('-', @ids);
        for my $description (qw/ INSERT DELETE /) {
            my %multi_misc_update_params = (
                subject_class_name => 'test.'.$subject_class_name,
                subject_id => $subject_id,
                description => $description,
                edit_date => '01-JAN-00 00.00.00.'.sprintf('%05d', $cnt++).' AM',
            );
            my $multi_misc_update = Genome::Site::TGI::Synchronize::Classes::MultiMiscUpdate->create(%multi_misc_update_params);
            push @multi_misc_updates, $multi_misc_update;
            my $subject_property_names = $subject_class_names_to_properties{$subject_class_name};
            for ( my $i = 0; $i < @{$subject_class_names_to_properties{$subject_class_name}}; $i++ ) {
                my $misc_update = Genome::Site::TGI::Synchronize::Classes::MiscUpdate->__define__(
                    %multi_misc_update_params,
                    subject_property_name => $subject_class_names_to_properties{$subject_class_name}->[$i],
                    editor_id => 'lims',
                    old_value => undef,
                    new_value => $ids[$i],
                    is_reconciled => 0,
                );
                $multi_misc_update->add_misc_update($misc_update);
            }
        }
    }

    return @multi_misc_updates;
}

1;

