#!/usr/bin/env genome-perl

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
};

use strict;
use warnings;

use above 'Genome';
use Test::More;

my $lims_class = 'Genome::Site::TGI::Synchronize::Classes::RegionIndex454';
use_ok($lims_class) or die;

my $entity_name = $lims_class->entity_name;
ok($entity_name, 'entity name');
is($entity_name, 'instrument data 454', 'entity name');
my $expected_genome_class = 'Genome::InstrumentData::454';
is($lims_class->genome_class_for_comparison, $expected_genome_class, 'genome class for create');
is($lims_class->genome_class_for_create, $expected_genome_class, 'genome class for create');

my %properties = (# real example
    id          => 2893608436,
    library_id  => 2892972865,
    run_name    => 'R_2013_09_27_11_18_20_FLX12070281_Administrator_143098577',
    subset_name => '2-TTGAACTC',
    index_sequence   => 'TTGAACTC',
    is_paired_end    => 0,
    region_id        => 2893608356,
    region_number    => 2,
    sff_file         => '/gscmnt/gc2135/production/143098577/R_2013_09_27_11_18_20_FLX12070281_Administrator_143098577/D_2013_10_01_13_56_25_blade8-4-11_fullProcessing/sff/demux/IGPA0UP02.demux.TTGAACTC.sff',
    total_bases_read => 5557332,
    total_reads      => 10937
);
my @properties_to_copy = $lims_class->properties_to_copy;
ok(@properties_to_copy, 'properties to copy');
is_deeply([sort keys %properties], [sort @properties_to_copy], 'correct properties to copy');
my @properties_to_keep_updated = $lims_class->properties_to_keep_updated;
ok(@properties_to_keep_updated, 'properties to keep updated');
cmp_ok(@properties_to_copy, '>', @properties_to_keep_updated, 'more properties to copy than keep updated');

my $lims_object = $lims_class->__define__(%properties);
ok($lims_object, "define lims $entity_name object");
$lims_object->sequence_file('/gscmnt/gc2135/production/143098577/R_2013_09_27_11_18_20_FLX12070281_Administrator_143098577/D_2013_10_01_13_56_25_blade8-4-11_fullProcessing/sff/demux/IGPA0UP02.demux.TTGAACTC.sff');

my $genome_object = $lims_object->create_in_genome;
ok($genome_object, "create genome $entity_name object");
isa_ok($genome_object, $expected_genome_class);
is($genome_object->sequencing_platform, '454', 'sequencing platform');

for my $property ( @properties_to_copy ) {
    my $value = eval{ $genome_object->$property; };
    $value = eval{ $genome_object->attributes(attribute_label => $property)->attribute_value; } if not defined $value;
    is($value, $properties{$property}, "genome and lims $property matches => $value");
}

done_testing();
