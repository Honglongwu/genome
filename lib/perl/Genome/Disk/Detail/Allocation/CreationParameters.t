#!/usr/bin/env genome-perl

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use strict;
use warnings;

use above "Genome";
use Test::More;
use Test::Exception;

use Genome::Disk::Detail::Allocation::CreationParameters;


my $EXAMPLE_PARAMETERS = {
    kilobytes_requested => 1024,
    owner_class_name => 'UR::Value',
    owner_id => 'silly owner',
    allocation_path => 'foo/bar',
    disk_group_name => 'testing-disk-group',
    group_subdirectory => 'testing-dir',
};

subtest create_with_no_params_fails => sub {
    plan tests => 1;

    dies_ok { Genome::Disk::Detail::Allocation::CreationParameters->create() }
        'create dies with no params';
};

subtest create_with_missing_required_param_fails => sub {
    plan tests => 1;

    my %params = %$EXAMPLE_PARAMETERS;

    delete $params{owner_id};
    dies_ok { Genome::Disk::Detail::Allocation::CreationParameters->create(
            %params);} 'create dies with missing required params';
};

subtest create_with_required_params_is_ok => sub {
    plan tests => 1;

    my %params = %$EXAMPLE_PARAMETERS;

    ok(Genome::Disk::Detail::Allocation::CreationParameters->create(
            %params), 'normal creation ok');
};

done_testing;
