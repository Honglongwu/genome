#!/usr/bin/env genome-perl

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use strict;
use warnings;

use Test::More;
use above "Genome";
use File::Basename qw(basename dirname);
use File::Spec;
use lib File::Spec->join(dirname(__FILE__), 'Allocation', 't-lib');
use GenomeDiskAllocationCommon qw(create_test_volumes);

use_ok('Genome::Disk::Allocation') or die;
use_ok('Genome::Disk::Volume') or die;

my @volumes = create_test_volumes(2);

my $allocation = Genome::Disk::Allocation->create(
    disk_group_name => $volumes[0]->disk_group_names,
    allocation_path => 'testing123',
    owner_class_name => 'UR::Value',
    owner_id => 'foo',
    kilobytes_requested => 1,
);

my @initial_events = $allocation->timeline_events;
ok(scalar(@initial_events) == 1, 'allocation should have only one event on creation');
has_event_type('created', $allocation);

$allocation->archivable(0);
has_event_type('preserved', $allocation);

$allocation->archivable(1);
has_event_type('unpreserved', $allocation);

$allocation->move();
has_event_type('moved', $allocation);

$allocation->reallocate();
has_event_type('reallocated', $allocation);

$allocation->archive();
has_event_type('archived', $allocation);

$allocation->unarchive();
has_event_type('unarchived', $allocation);


$allocation->archive_after_time(
    DateTime->now(time_zone => 'local')->add(years => -1)->strftime('%F %T')
);
has_event_type('weakened', $allocation);

$allocation->archive_after_time(
    DateTime->now(time_zone => 'local')->add(years => 5)->strftime('%F %T')
);
has_event_type('strengthened', $allocation);

sub has_event_type {
    my $event_type = shift;
    my $allocation_id = shift->id;

    my @events = Genome::Timeline::Event::Allocation->get(
        object_id => $allocation_id,
        name => $event_type
    );
    ok(@events, "allocation has $event_type");
}

done_testing();
