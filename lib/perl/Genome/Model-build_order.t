#!/usr/bin/env perl

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}


use above 'Genome';
use Genome::TestObjGenerator::Model::ReferenceAlignment;
use Genome::TestObjGenerator::Build;
use Test::More;
use Data::Dumper;

use strict;
use warnings;

my $pkg = 'Genome::Model';

use_ok($pkg);


my $model = Genome::TestObjGenerator::Model::ReferenceAlignment->setup_object();
my @builds = map { Genome::TestObjGenerator::Build->setup_object(model_id => $_) } ($model->id) x 3;

$builds[0]->creation_event->date_scheduled("2013-08-26 00:00:00");
$builds[1]->creation_event->date_scheduled("2013-08-26 00:00:01");
$builds[2]->creation_event->date_scheduled("2013-08-26 00:00:02");

my @reported_builds = $model->builds;

is_deeply(\@reported_builds, [reverse @builds], "Builds appear in expected order");


# Change the ordering
$builds[0]->creation_event->date_scheduled("2013-08-26 00:00:02");
$builds[1]->creation_event->date_scheduled("2013-08-26 00:00:01");
$builds[2]->creation_event->date_scheduled("2013-08-26 00:00:00");

@reported_builds = $model->builds;

is_deeply(\@reported_builds, \@builds, "Builds appear in expected order");

done_testing();
