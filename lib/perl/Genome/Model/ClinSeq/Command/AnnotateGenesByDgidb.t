#!/gsc/bin/perl

BEGIN { 
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use strict;
use warnings;

use above "Genome";
use Test::More;

use_ok("Genome::Model::ClinSeq::Command::AnnotateGenesByDgidb");

my $column_name = "Gene_name";
my ($in, $in_file) = Genome::Sys->create_temp_file;
$in->print("$column_name\tSomething\n");
$in->print("KRAS\tSomething_else\n");
$in->print("FLT3\tSomething_else\n");
$in->close;

my $reader = Genome::Utility::IO::SeparatedValueReader->create(
    input     => $in_file,
    separator => "\t",
);

my $list = Genome::Model::ClinSeq::Command::AnnotateGenesByDgidb->convert($reader, $column_name);
is($list, "FLT3,KRAS", "List with two items converted correctly");

($in, $in_file) = Genome::Sys->create_temp_file;
$in->print("Not_the_gene_name\tSomething\n");
$in->print("KRAS\tSomething_else\n");
$in->close;

$reader = Genome::Utility::IO::SeparatedValueReader->create(
    input     => $in_file,
    separator => "\t",
);

eval{
    $list = Genome::Model::ClinSeq::Command::AnnotateGenesByDgidb->convert($reader, $column_name)
};

ok($@ =~ /$column_name not found in file/, "Error if the column name does not exist");

done_testing;

