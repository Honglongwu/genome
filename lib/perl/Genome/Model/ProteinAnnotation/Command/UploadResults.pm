package Genome::Model::ProteinAnnotation::Command::UploadResults;

use strict;
use warnings;

use Scalar::Util 'blessed';
use Bio::DB::BioDB;
use Bio::DB::Query::BioQuery;

class Genome::Model::ProteinAnnotation::Command::UploadResults {
    is  => 'Command::V2',
    has => [
        bio_seq_features => { 
            is => 'ARRAY',
            is_input => 1,
            is_output => 1,
            doc => 'bioperl sequence features produced by protein annotation that are to be uploaded',
        },
    ],
    doc => 'upload bioperl objects generated by protein annotation to biosql db',
};

sub execute {
    my $self = shift;

    my $dbadp = Bio::DB::BioDB->new(
        -database => 'biosql',
        -user     => 'sg_user',
        -pass     => 'sg_us3r',
        -dbname   => 'DWRAC',
        -driver   => 'Oracle',
    );

    # Prepare feature query
    my $feature_adp = $dbadp->get_object_adaptor('Bio::SeqFeatureI');
    my $feature_query = Bio::DB::Query::BioQuery->new();
    $feature_query->datacollections(['Bio::SeqFeatureI f']);
    $feature_query->where(['f.display_name = ?']);

    # Make sure each item in the list of inputs is defined. Further, make sure each item is
    # indeed a Bio::SeqFeature and not an array ref or something else.
    my @features;
    for my $feature ($self->bio_seq_features) {
        next unless defined $feature;
        my @current_features;
        if (ref($feature) eq 'ARRAY') {
            push @current_features, @{$feature};
        }
        else {
            push @current_features, $feature;
        }
        push @features, grep { blessed($_) and $_->isa('Bio::SeqFeatureI') } @current_features;
    }

    for my $feature (@features) {
        # Get existing Bio::SeqFeature from biosql. I'm guessing this is uploaded by the 
        # gene predictors prior to protein annotation, and that the existing feature in the
        # database is just updated with additional tags?
        my $display_name = $feature->display_name();
        my $result = $feature_adp->find_by_query(
            $feature_query,
            -name   => 'pap_upload_result_feature',
            -values => [ $display_name ],
        );

        my $db_feature = $result->next_object();
        unless (defined($db_feature)) {
            warn "failed to find feature object for '$display_name'";
            next;
        }

        for my $annotation ($feature->annotation->get_Annotations()) {
            $db_feature->annotation->add_Annotation($annotation);
        }

        for my $tag_name ($feature->get_all_tags) {
            for my $tag_value ($feature->each_tag_value($tag_name)) {
                $db_feature->add_tag_value($tag_name, $tag_value);
            }
        }

        $db_feature->store();
    }

    unless ($ENV{UR_DBI_NO_COMMIT}) {
        $feature_adp->commit();
    }

    return 1;
}

1;
