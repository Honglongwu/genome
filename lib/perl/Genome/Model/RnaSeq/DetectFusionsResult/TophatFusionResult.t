#!/usr/bin/env perl
use strict;
use warnings;

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
};

use above 'Genome';
use Test::More skip_all => 'not ready for use';

my $data_dir = $ENV{GENOME_TEST_INPUTS} . "/Genome-Model-RnaSeq-DetectFusionsResult-ChimerascanResult";
my $tophat_data = $data_dir . "/tophat_data/";


my $t = Genome::Taxon->__define__(name => 'human');
my $p = Genome::Individual->create(name => "test-human-patient", common_name => 'testpatient', taxon => $t);
my $s = Genome::Sample->create(name => "test-human-patient", common_name => 'tumor', source => $p);
my $library = Genome::Library->create(name => "test library", sample_id => $s->id);
ok($s, 'created sample');

my $instrument_data = Genome::InstrumentData::Solexa->create(
    sample_id => $s->id,
    library_id => $library->id
);

my $ref_pp = Genome::ProcessingProfile::ImportedReferenceSequence->create(name => 'test_ref_pp');

my $ref_model = Genome::Model::ImportedReferenceSequence->create(
    name                => "test_ref_sequence_human",
    processing_profile  => $ref_pp,
    subject_class_name  => ref($s),
    subject_id          => $s->id,
);
ok($ref_model, "created reference sequence model (human)");

my $reference_build = Genome::Model::Build::ImportedReferenceSequence->create(
    name            => "ref_sequence_$s-37",
    model           => $ref_model,
    fasta_file      => 'turkey_sammich',
    data_directory  => "$data_dir/ref",
    version         => '37',
);

my $alignment_result = Genome::InstrumentData::AlignmentResult::Tophat->__define__(
    aligner_name => 'tophat',
    output_dir => $tophat_data,
    reference_build_id => $reference_build->id,
    bowtie_version => '0.12.7',
);
$alignment_result->lookup_hash($alignment_result->calculate_lookup_hash());

#$alignment_result->add_input(name => 'instrument_data_id-0', value_id => $instrument_data->id, value_class_name => "UR::Value");
#$alignment_result->add_param(name => 'instrument_data_id_count', value_id => 1, value_class_name => "UR::Value");
#$alignment_result->add_param(name => 'instrument_data_id_md5', value_id => Genome::Sys->md5sum_data($instrument_data->id) , value_class_name => "UR::Value");

my $index = Genome::Model::RnaSeq::DetectFusionsResult::TophatFusionResult::Index->__define__(
    reference_build => $reference_build,
    output_dir => $ENV{GENOME_TEST_INPUTS} . '/Genome-Model-RnaSeq-DetectFusionsResult-BreakFusionResult/IndexResult'
);
$index->lookup_hash($index->calculate_lookup_hash());

my $result = Genome::Model::RnaSeq::DetectFusionsResult::TophatFusionResult->get_or_create(
    alignment_result => $alignment_result,
    version => '2.0.0',
    detector_params => " ",
);

isa_ok($result, "Genome::Model::RnaSeq::DetectFusionsResult::BreakFusionResult");

done_testing();
