package chimerascan_test_setup;

use strict;
use warnings;

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
};

use above 'Genome';
use Test::More;
require Exporter;
our @ISA = qw(Exporter);
our @EXPORT_OK = qw(setup);

sub setup {
    my %parameters = @_;
    my $test_data_version = $parameters{test_data_version};
    my $chimerascan_version = $parameters{chimerascan_version};
    my $picard_version = $parameters{picard_version};
    diag "Setting up with \n\ttest_data_version:$test_data_version\n\t" .
            "chimerascan_version:$chimerascan_version\n\t" .
            "picard_version:$picard_version\n\t";

    my $data_dir = $ENV{GENOME_TEST_INPUTS} . "/Genome-Model-RnaSeq-DetectFusionsResult-ChimerascanVrlResult/$chimerascan_version";
    my $tophat_dir = $data_dir . "/tophat_data$test_data_version";
    die "Couldn't find tophat_dir at '$tophat_dir'" unless -d $tophat_dir;

    my $t = Genome::Taxon->__define__(name => 'human');
    my $p = Genome::Individual->create(name => "test-human-patient", common_name => 'testpatient', taxon => $t);
    my $s = Genome::Sample->create(name => "test-human-patient", common_name => 'tumor', source => $p);
    my ($species_names, $versions) = @_;

    my $ref_pp = Genome::ProcessingProfile::ImportedReferenceSequence->create(name => 'test_ref_pp');

    my $ref_model = Genome::Model::ImportedReferenceSequence->create(
        name                => "test_ref_sequence_human",
        processing_profile  => $ref_pp,
        subject_class_name  => ref($s),
        subject_id          => $s->id,
    );

    my $reference_build = Genome::Model::Build::ImportedReferenceSequence->create(
        name            => "ref_sequence_$s-37",
        model           => $ref_model,
        fasta_file      => 'turkey_sammich',
        data_directory  => "$data_dir/ref",
        version         => '37',
    );


    my $annotation_model = Genome::Model::ImportedAnnotation->create(
        name => '1 chr test annotation',
        subject => $ref_model->subject,
        processing_profile => Genome::ProcessingProfile->get(name => 'imported-annotation.ensembl'),
        reference_sequence => $reference_build,
    );

    my $annotation_build = Genome::Model::Build::ImportedAnnotation->__define__(
        version => 'v1',
        model => $annotation_model,
        data_directory => '/gscmnt/gc8002/info/model_data/2772828715/build125092315', #65_37j_v6
    );

    my $alignment_result = Genome::InstrumentData::AlignmentResult::Tophat->__define__(
        aligner_name => 'tophat',
        output_dir => $tophat_dir,
        reference_build_id => $reference_build->id,
        bowtie_version => '0.12.7'
    );
    $alignment_result->lookup_hash($alignment_result->calculate_lookup_hash());

    my $index_dir = File::Spec->join($data_dir, 'IndexResult');
    my $index = Genome::Model::RnaSeq::DetectFusionsResult::ChimerascanVrlResult::Index->__define__(
        version => $chimerascan_version,
        bowtie_version => "0.12.7",
        reference_build => $reference_build,
        output_dir => $index_dir,
        annotation_build => $annotation_build,
        picard_version => $picard_version,
    );
    $index->lookup_hash($index->calculate_lookup_hash());

    *Genome::Model::RnaSeq::DetectFusionsResult::ChimerascanVrlResult::_staging_disk_usage
        = sub { return 40 * 1024 };

    *Genome::Model::RnaSeq::DetectFusionsResult::ChimerascanVrlResult::_resolve_index_dir
        = sub { return $index_dir };


    return $alignment_result, $annotation_build;
}

1;
