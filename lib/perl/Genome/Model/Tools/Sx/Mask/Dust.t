#!/usr/bin/env genome-perl

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
    $ENV{UR_COMMAND_DUMP_STATUS_MESSAGES} = 1;
}

use strict;
use warnings;

use above "Genome";

use Test::More;
use File::Temp;

my $datadir = $ENV{GENOME_TEST_INPUTS} . '/Genome-Model-Tools-Sx/MaskDust';
 
my $temp_dir = Genome::Sys->create_temp_directory;

# Convert fastq to fasta to run dust
my $expected_output = "$datadir/dusted.fastq";
my $output1 = "$temp_dir/dusted_1.fastq";
my $cmd = Genome::Model::Tools::Sx::Mask::Dust->create(
    input => [ "$datadir/input.fastq" ],
    output => [ $output1 ],
);
ok($cmd, "create");
ok($cmd->execute, "execute");
is(Genome::Sys->md5sum($output1), Genome::Sys->md5sum($expected_output), 'dust output matches');

# Test using fasta/qual directly
my $output2 = "$temp_dir/dusted_2.fastq";
my $cmd2 = Genome::Model::Tools::Sx::Mask::Dust->create(
    input => [ "$datadir/input.fasta:qual_file=$datadir/input.qual" ],
    output => [ $output2 ],
);
ok($cmd2, "create");
ok($cmd2->execute, "execute");
is(Genome::Sys->md5sum($output2), Genome::Sys->md5sum($expected_output), 'dust output matches');

done_testing();
exit;

