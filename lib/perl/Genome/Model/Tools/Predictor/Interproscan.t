#!/usr/bin/env genome-perl

BEGIN { 
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use strict;
use warnings;

use above "Genome";
use Test::More;

use_ok('Genome::Model::Tools::Predictor::Interproscan') or die;

my $temp_output_dir = Genome::Sys->create_temp_directory();
ok(-d $temp_output_dir, "created temp output dir at $temp_output_dir");

my $test_data_path = $ENV{GENOME_TEST_INPUTS} . '/Genome-Model-Tools-Predictor';
my $test_fasta = join('/', $test_data_path, 'medium.fasta');
ok(-e $test_fasta, "test fasta file exists at $test_fasta");

my $interpro = Genome::Model::Tools::Predictor::Interproscan->create(
    output_directory => $temp_output_dir,
    input_fasta_file => $test_fasta,
    version => '4.8',
    parameters => '-cli -appl hmmpfam -appl hmmtigr -goterms -verbose -iprlookup -seqtype p -format raw',
    dump_predictions_to_file => 1,
);
ok($interpro, 'successfully created interpro command object');

ok($interpro->execute, 'successfully executed interpro');
ok(-e $interpro->raw_output_path, "raw output file exists at expected location " . $interpro->raw_output_path);
ok(-e $interpro->dump_output_path, "dump file exists at expected location " . $interpro->dump_output_path);

# Compare output to expected output
my $expected_raw_output = join('/', $test_data_path, 'interpro.medium_fasta.raw.expected');
ok(-e $expected_raw_output, "expected raw output file for interpro exists at $expected_raw_output");

my $expected_dump_output = join('/', $test_data_path, 'interpro.medium_fasta.dump.expected');
ok (-e $expected_dump_output, "expected dump output file for interpro exists at $expected_dump_output");

my $dump_diff = Genome::Sys->diff_file_vs_file($interpro->dump_output_path, $expected_dump_output);
ok(!$dump_diff, "no differences found between expected dump output " . $interpro->dump_output_path .
    " and expected dump output $expected_dump_output");

my $ace_file = $interpro->ace_file_path;
ok(-e $ace_file, "interpro produced an ace file at $ace_file");

done_testing();



