package Genome::Model::Tools::Music::CreateVisualizations;

use warnings;
use strict;
use Genome;
use IO::File;

our $VERSION = $Genome::Model::Tools::Music::VERSION;

class Genome::Model::Tools::Music::CreateVisualizations {
    is => 'Command::V2',
    has_input => [
        mutation_matrix_file => {is => 'String', doc => 'A gene/sample matrix generated by the mutation-relation tool'},
        mutation_relation_file => {is => 'Text', is_optional => 1, doc => 'Results of mutation-relation tool'},
        categorical_clinical_data_file => {is => 'Text', is_optional => 1, doc => 'Table of samples (y) vs. categorical clinical data category (x)'},
        numeric_clinical_data_file => {is => 'Text', is_optional => 1, doc => 'Table of samples (y) vs. numeric clinical data category (x)'},
        output_dir => {is => 'Text', doc => 'Output directory path'},
        maf_file => {is => 'Text', doc => 'List of mutations using TCGA MAF specifications v2.3'},
        bam_list => {is => 'Text', doc => 'Tab delimited list of BAM files [sample_name normal_bam tumor_bam]'},
    ],
    
};

#TODO: write a bunch of doc and make it pretty

sub execute {
    my $self = shift;
    if ($self->mutation_relation_file) {
        $self->create_mutation_relation_plots;
    }
    $self->create_survival_plots;
    return 1;
}


sub create_mutation_relation_plots {
    my $self = shift;
    my $output_dir = join('/', $self->output_dir, 'mutation_relation_plots');
    mkdir $output_dir unless -e $output_dir;
    my $cmd = Genome::Model::Tools::Music::CreateVisualizations::CreateMutationRelationPlots->create(
        input_matrix => $self->mutation_matrix_file,
        output_dir => $output_dir,
        mutation_relation_file => $self->mutation_relation_file
    );
    my $rv = eval{$cmd->execute()};
    if($@){
        my $error = $@;
        $self->error_message('Error running ' . $cmd->command_name . ': ' . $error);
        return;
    }
    return 1;
}

sub create_survival_plots {
    my $self = shift;
    unless($self->numeric_clinical_data_file and $self->categorical_clinical_data_file){
        $self->status_message("Skipping survival plots due to lack of clinical data");
        return 1;
    }
    my $output_dir = join('/', $self->output_dir, 'survival_plots');
    mkdir $output_dir unless -e $output_dir;
    my $cmd = Genome::Model::Tools::Music::CreateVisualizations::CreateSurvivalPlots->create(
        output_dir => $output_dir,
        maf_file => $self->maf_file,
        bam_list => $self->bam_list,
        categorical_clinical_data_file => $self->categorical_clinical_data_file,
        numeric_clinical_data_file => $self->numeric_clinical_data_file,
    );
    my $rv = eval{$cmd->execute()};
    if($@){
        my $error = $@;
        $self->error_message('Error running ' . $cmd->command_name . ': ' . $error);
        return;
    }
    return 1;
}

1;
