#!/gsc/bin/perl

BEGIN { 
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use strict;
use warnings;

use above "Genome";
use Test::More;
use Genome::Utility::Test;
use Genome::Test::Factory::Model::SomaticVariation;

my $class = "Genome::Model::Tools::Tcga::CreateSubmissionArchive";
use_ok($class);

my $base_dir = Genome::Utility::Test->data_dir_ok($class, "v1");

my @headers = $class->get_sdrf_headers;

my @expected_headers = (
        'Material Extract Name',
        'Material Comment [TCGA Barcode]',
        'Material Comment [is tumor]',
        'Material Material Type',
        'Material Annotation REF',
        'Material Comment [TCGA Genome Reference]',
        'Library Protocol REF',
        'Library Parameter Value [Vendor]',
        'Library Parameter Value [Catalog Number]',
        'Library Parameter Value [Produce URL]',
        'Library Parameter Value [Target File URL]',
        'Library Parameter Value [Target File Format]',
        'Library Parameter Value [Target File Format Version]',
        'Library Parameter Value [Probe File URL]',
        'Library Parameter Value [Probe File Format]',
        'Library Parameter Value [Probe File Format Version]',
        'Library Parameter Value [Target Reference Accession]',
        'Sequencing Protocol REF',
        'Mapping Protocol REF',
        'Mapping Comment [Derived Data File REF]',
        'Mapping Comment [TCGA CGHub ID]',
        'Mapping Comment [TCGA CGHub metadata URL]',
        'Mapping Comment [TCGA Include for Analysis]',
        'Mapping2 Derived Data File',
        'Mapping2 Comment [TCGA Include for Analysis]',
        'Mapping2 Comment [TCGA Data Type]',
        'Mapping2 Comment [TCGA Data Level]',
        'Mapping2 Comment [TCGA Archive Name]',
        'Mapping2 Parameter Value [Protocol Min Base Quality]',
        'Mapping2 Parameter Value [Protocol Min Map Quality]',
        'Mapping2 Parameter Value [Protocol Min Tumor Coverage]',
        'Mapping2 Parameter Value [Protocol Min Normal Coverage]',
        'Variants Protocol REF',
        'Variants Derived Data File',
        'Variants Comment [TCGA Spec Version]',
        'Variants Comment [TCGA Include for Analysis]',
        'Variants Comment [TCGA Data Type]',
        'Variants Comment [TCGA Data Level]',
        'Variants Comment [TCGA Archive Name]',
        'Maf Protocol REF',
        'Maf Derived Data File',
        'Maf Comment [TCGA Spec Version]',
        'Maf Comment [TCGA Include for Analysis]',
        'Maf Comment [TCGA Data Type]',
        'Maf Comment [TCGA Data Level]',
        'Maf Comment [TCGA Archive Name]',
        'Validation Protocol REF',
        'Validation Derived Data File',
        'Validation Comment [TCGA Spec Version]',
        'Validation Comment [TCGA Include for Analysis]',
        'Validation Comment [TCGA Data Type]',
        'Validation Comment [TCGA Data Level]',
        'Validation Comment [TCGA Archive Name]'
        );

is_deeply(\@headers, \@expected_headers, "Headers generated correctly");

my %empty_row;
my $null_row = $class->fill_in_nulls(\%empty_row);
my @empty_keys = sort keys %$null_row;
my @sorted_headers = sort @expected_headers;
is_deeply(\@empty_keys, \@sorted_headers, "Empty row got filled in");
for my $key (@sorted_headers) {
    is($null_row->{$key}, $class->get_null_character, "Empty row was filled in with null symbols");
}

my $test_output = Genome::Sys->create_temp_file_path;
ok($class->print_sdrf($test_output, $null_row), "print_sdrf ran ok with a row of nulls");
ok(-s $test_output, "Output file exists");
`cat $test_output > temp`;

my $test_build = Genome::Test::Factory::Model::SomaticVariation->setup_somatic_variation_build;

$test_build->data_directory($base_dir."/som_var_dir");
my $row = $class->create_vcf_row($test_build, "test_archive");
print Data::Dumper::Dumper($row);

done_testing;
