#!/usr/bin/env genome-perl

use strict;
use warnings;

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
    $ENV{UR_COMMAND_DUMP_STATUS_MESSAGES} = 1;
};

use above 'Genome';

require Genome::Utility::Test;
require File::Temp;
require File::Compare;
use Test::More;

use_ok('Genome::Model::GenotypeMicroarray::Command::ExtractToVcf') or die;
use_ok('Genome::Model::GenotypeMicroarray::Test') or die;

my $tmpdir = File::Temp::tempdir(CLEANUP => 1);
my $build = Genome::Model::GenotypeMicroarray::Test::example_legacy_build();

my $output_vcf = $tmpdir.'/genotypes.vcf';
my $extract = Genome::Model::GenotypeMicroarray::Command::ExtractToVcf->create(
    build => $build,
    output => $output_vcf,
);
ok($extract, 'create extract command');
ok($extract->execute, 'execute extract command');
is_deeply($extract->alleles, { 'TC' => 1, 'AA' => 1, 'CC' => 2, 'AG' => 3, 'TT' => 1, 'GG' => 1 }, 'alleles match');
is($extract->genotypes_input, 9, 'genotypes input');
is($extract->genotypes_output, 9, 'genotypes output');
is($extract->genotypes_filtered, 0, 'genotypes filtered');
my $expected_vcf = Genome::Model::GenotypeMicroarray::Test::testdir().'/extract/expected-from-legacy-build.vcf';
Genome::Utility::Test::compare_ok($output_vcf, $expected_vcf, 'vcf matches');

done_testing();
