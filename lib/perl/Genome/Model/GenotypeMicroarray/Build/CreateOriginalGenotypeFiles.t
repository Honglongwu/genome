#!/usr/bin/env genome-perl

use strict;
use warnings;

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
    $ENV{UR_COMMAND_DUMP_STATUS_MESSAGES} = 1;
};

use above 'Genome';

require File::Compare;
use Test::More;

use_ok('Genome::Model::GenotypeMicroarray::Build::CreateOriginalGenotypeFiles') or die;
use_ok('Genome::Model::GenotypeMicroarray::Test') or die;

my $build = Genome::Model::GenotypeMicroarray::Test->build();
my $example_build = Genome::Model::GenotypeMicroarray::Test->example_build();
my $extract = Genome::Model::GenotypeMicroarray::Build::CreateOriginalGenotypeFiles->create(
    build => $build,
);
ok($extract, 'create original genotype files command');
ok($extract->execute, 'execute original genotype files command');

is(File::Compare::compare($build->original_genotype_vcf_file_path, $example_build->original_genotype_vcf_file_path), 0, 'vcf matches');
is(File::Compare::compare($build->original_genotype_file_path, $example_build->original_genotype_file_path), 0, 'tsv matches');
is_deeply($extract->alleles, { 'TC' => 1, 'AA' => 1, 'CC' => 2, 'AG' => 3, 'TT' => 1, 'GG' => 1 }, 'alleles match');
is($extract->genotypes_output, 9, 'no genotypes output b/c vcf exists');

#print "gvimdiff ".$build->original_genotype_vcf_file_path.' '.$example_build->original_genotype_vcf_file_path."\n"; <STDIN>;
#print "gvimdiff ".$build->original_genotype_file_path.' '.$example_build->original_genotype_file_path."\n"; <STDIN>;

done_testing();
