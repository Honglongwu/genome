#!/usr/bin/env genome-perl

use strict;
use warnings;

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
    $ENV{NO_LSF} = 1;
};

use above "Genome";
use Test::More;

use_ok('Genome::Model::ReferenceAlignment::Command::InstrumentDataAlignmentBams') or die;

#Define the test where expected results are stored
my $expected_output_dir = $ENV{"GENOME_TEST_INPUTS"} . "Genome-Model-ReferenceAlignment-Command-InstrumentDataAlignmentBams/2014-05-27/";
ok(-e $expected_output_dir, "Found test dir: $expected_output_dir") or die;

my $temp_dir = Genome::Sys->create_temp_directory();
ok($temp_dir, "created temp directory: $temp_dir") or die;

#Run InstrumentDataAlignmentBams
my $refalign_build = Genome::Model::Build->get(id => 'debc3adc9b134ffe8b9e5ad2738918eb');
ok($refalign_build, "Found refalign build") or die;
my $refalign_instrumentdataalignmentbams = Genome::Model::ReferenceAlignment::Command::InstrumentDataAlignmentBams->create(outdir=>$temp_dir, build_id=>$refalign_build->id);
ok($refalign_instrumentdataalignmentbams->execute(), "ran instrumentdatalignmentbams") or die;

#Perform a diff between the stored results and those generated by this test
my @diff = `diff -r $expected_output_dir $temp_dir`;
ok(@diff == 0, "Found only expected number of differences between expected results and test results")
or do {
  diag("expected: $expected_output_dir\nactual: $temp_dir\n");
  diag("differences are:");
  diag(@diff);
  my $diff_line_count = scalar(@diff);
  print "\n\nFound $diff_line_count differing lines\n\n";
  Genome::Sys->shellcmd(cmd => "rm -fr /tmp/last-run-refalign-instrumentdataalignmentbams/");
  Genome::Sys->shellcmd(cmd => "mv $temp_dir /tmp/last-run-refalign-instrumentdataalignmentbams/");
};

done_testing();
