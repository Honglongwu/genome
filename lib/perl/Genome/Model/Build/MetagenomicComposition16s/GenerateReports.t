#!/usr/bin/env genome-perl
#
# Tests all MC16s reports
#

BEGIN {
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_COMMAND_DUMP_STATUS_MESSAGES} = 1;
}

use strict;
use warnings;

use above 'Genome';

use Genome::Model::Build::MetagenomicComposition16s::TestBuildFactory;
use Test::More;

use_ok('Genome::Model::Build::MetagenomicComposition16s::GenerateReports');

my ($build, $example_build) = Genome::Model::Build::MetagenomicComposition16s::TestBuildFactory->build_with_example_build_for_454;
my @amplicon_sets = $build->amplicon_sets;
my @example_amplicon_sets = $example_build->amplicon_sets;
ok(@amplicon_sets && @example_amplicon_sets, 'Got amplicon sets');
for ( my $i = 0; $i < @example_amplicon_sets; $i++ ) {
    for my $file_name (qw/ oriented_fasta_file oriented_qual_file classification_file /) {
        my $file = $example_amplicon_sets[$i]->$file_name;
        die "File ($file_name: $file) does not exist!" if not -s $file;
        Genome::Sys->create_symlink($file, $amplicon_sets[$i]->$file_name);
    }
}

# set some values
$build->amplicons_attempted(20);
$build->amplicons_processed(14);
$build->amplicons_processed_success('0.70');
$build->amplicons_classified(14);
$build->amplicons_classified_success('1.00');

# run
my $reports = Genome::Model::Build::MetagenomicComposition16s::GenerateReports->create(input_build => $build);
ok($reports, 'create');
ok($reports->execute, 'execute');

# verify
my @reports = glob($build->reports_directory.'/*');
is(@reports, 2, "Created 2 reports");
ok(-s $build->reports_directory.'/Summary/report.xml', 'Created summary report');
ok(-s $build->reports_directory.'/Summary/report.html', 'Created summary report html');
ok(-s $build->reports_directory.'/Composition/report.xml', 'Created composition report');

#print Data::Dumper::Dumper(map { $_->xml_string } $build->reports);<STDIN>;
done_testing();
exit;

