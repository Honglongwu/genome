#!/usr/bin/env perl

use warnings;
use strict;

use above 'Genome';

use Data::Dumper;
use Test::More;

use Genome::Utility::Test qw(compare_ok);
use File::Basename qw/dirname/;
use Genome::TestObjGenerator::Build;
use Genome::TestObjGenerator::Model::ImportedVariationList;
use Genome::Utility::Vcf qw/diff_vcf_file_vs_file/;

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

my $test_data_dir = File::Spec->rel2abs(join("/", dirname(__FILE__), "TestData"));
my $input_file = join("/", $test_data_dir, "in.clean.vcf");
my $dbsnp_vcf = join("/", $test_data_dir, "dbsnp.clean.vcf");
my $thousand_genomes_vcf = join("/", $test_data_dir, "1kg-wgs.clean.vcf");
my $expected_file = join("/", $test_data_dir, "out.clean.vcf");

my $tmpdir = Genome::Sys->create_temp_directory;
my $output_file = join("/", $tmpdir, "output.vcf");

sub setup_annotation_build {
    my ($source_name, $version, $file) = @_;
    my $annotation_model = Genome::TestObjGenerator::Model::ImportedVariationList->setup_object(
        name => "omg-fake-annotation-$source_name",
    );
    $annotation_model->source_name($source_name);

    my $output_dir = Genome::Sys->create_temp_directory;
    symlink($file, "$output_dir/snvs.hq.vcf");

    my $swr = Genome::Model::Tools::DetectVariants2::Result::Manual->__define__(
        output_dir => $output_dir,
        variant_type => "snv"
        );

    return Genome::TestObjGenerator::Build->setup_object(
        model_id => $annotation_model->id,
        status => "Succeeded",
        version => $version,
        snv_result => $swr,
        );
}

my $pkg = 'Genome::Model::PhenotypeCorrelation::Command::VcfAnnotation::Joinx';
use_ok($pkg);

my $dbsnp_build = setup_annotation_build("fake-dbsnp", "123", $dbsnp_vcf);
my $tg_build = setup_annotation_build("fake-1kg-wgs", "456", $thousand_genomes_vcf);

my @params = (
    {source_name => "fake-dbsnp", source_version => 123, info_fields => "dbSNPBuildID=dbsnp,per-alt;GMAF"},
    {source_name => "fake-1kg-wgs", source_version => 456, info_fields => "AA;AF;AMR_AF;ASN_AF;AFR_AF;EUR_AF;VT",
            identifiers => 0},
);

my $cmd = $pkg->create(input_file => $input_file, output_file => $output_file, params => \@params);
ok($cmd, "created command");
ok($cmd->execute, "executed command");

my $diff = diff_vcf_file_vs_file($output_file, $expected_file, ignore_patterns => ["^##annotation="]);
ok(!$diff, "Output matches expected value") or diag("Diff results:\n$diff");

done_testing();
