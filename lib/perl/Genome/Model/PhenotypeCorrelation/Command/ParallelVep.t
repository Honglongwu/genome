#!/usr/bin/env genome-perl

use warnings;
use strict;

use POSIX;
use Data::Dumper;
use Sort::Naturally qw/nsort/;
use IO::File;
use File::Temp qw/tempdir/;
use File::Slurp qw/read_file/;
use Test::More;
use above 'Genome';

use Genome::Utility::Test qw(compare_ok);

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
    # don't run workflow through lsf
    $ENV{NO_LSF} = 1;
}

my $pkg = 'Genome::Model::PhenotypeCorrelation::Command::ParallelVep';
use_ok($pkg);

my $test_data_dir = $ENV{GENOME_TEST_INPUTS} . "/Genome-Model-PhenotypeCorrelation-testdata/CaseControl";

my $tmpdir = tempdir(
    't-ParallelVep-XXXXX',
    TEMPDIR => 1,
    CLEANUP => 1
);
my $logdir = "$tmpdir/logs";
my $workdir = "$tmpdir/work";
my $parallel_output_file = "$tmpdir/parallel.vep";
my $orig_output_file = "$tmpdir/orig.vep";
for my $dir ($logdir, $workdir) {
    mkdir($dir) or die "Failed to create directory $dir";
}

# TEST!
my $vcf_file = "$test_data_dir/multisample.vcf.gz";
my $ensembl_annotation_build_id = $ENV{GENOME_DB_ENSEMBL_DEFAULT_IMPORTED_ANNOTATION_BUILD};
my $annotation_build = Genome::Model::Build->get($ensembl_annotation_build_id);

my $parallel_cmd = $pkg->create(
        input_vcf => $vcf_file,
        ensembl_annotation_build => $annotation_build,
        log_dir => $logdir,
        work_dir => $workdir,
        output_file => $parallel_output_file,
    );
ok($parallel_cmd, "Created command object");
ok($parallel_cmd->execute, "Executed command");
ok(-s $parallel_output_file, "Output file exists");

my $orig_cmd = Genome::Db::Ensembl::Vep->create(
    input_file => $vcf_file,
    output_file => $orig_output_file,
    ensembl_annotation_build_id => $ensembl_annotation_build_id,
    format => "vcf",
    condel => "b",
    polyphen => "b",
    sift => "b",
    hgnc => 1,
    quiet => 1,
);

my $orig_result = $orig_cmd->execute();

ok($orig_result, "Ran non-parallel vep");
ok(compare_ok($parallel_output_file, $orig_output_file, filters => ['^#.*']),
    "Parallel results are the same as serial vep");

done_testing();
