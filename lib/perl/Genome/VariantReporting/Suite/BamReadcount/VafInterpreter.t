#!/usr/bin/env genome-perl

BEGIN { 
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use strict;
use warnings;

use above "Genome";
use Test::More;
use Test::Exception;
use Genome::File::Vcf::Entry;
use Genome::VariantReporting::Suite::BamReadcount::TestHelper qw(
     create_default_entry create_long_deletion_entry create_deletion_entry);

my $pkg = 'Genome::VariantReporting::Suite::BamReadcount::VafInterpreter';
use_ok($pkg);
my $factory = Genome::VariantReporting::Framework::Factory->create();
isa_ok($factory->get_class('interpreters', $pkg->name), $pkg);

subtest "one alt allele" => sub {
    my $interpreter = $pkg->create(sample_name => "S1");
    lives_ok(sub {$interpreter->validate}, "Interpreter validates");

    my %expected = (
        G => {
            S1_vaf => 99.1279069767442,
            S1_ref_count => 3,
            S1_var_count => 341,
        }
    );

    my $entry = create_default_entry();
    my %result = $interpreter->interpret_entry($entry, ['G']);
    is_deeply(\%result, \%expected, "Values are as expected");
};

subtest "insertion" => sub {
    my $interpreter = $pkg->create(sample_name => "S4");
    lives_ok(sub {$interpreter->validate}, "Interpreter validates");

    my %expected = (
        AA => {
            S4_vaf => 5.81395348837209,
            S4_ref_count => 3,
            S4_var_count => 20,
        }
    );

    my $entry = create_default_entry();
    my %result = $interpreter->interpret_entry($entry, ['AA']);
    is_deeply(\%result, \%expected, "Values are as expected");
};

subtest "deletion" => sub {
    my $interpreter = $pkg->create(sample_name => "S1");
    lives_ok(sub {$interpreter->validate}, "Interpreter validates");

    my %expected = (
        A => {
            S1_vaf => 5.81395348837209,
            S1_ref_count => 5,
            S1_var_count => 20,
        }
    );

    my $entry = create_deletion_entry();
    my %result = $interpreter->interpret_entry($entry, ['A']);
    is_deeply(\%result, \%expected, "Values are as expected");
};

done_testing;

