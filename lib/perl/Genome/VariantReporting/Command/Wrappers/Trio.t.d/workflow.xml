<?xml version="1.0"?>
<operation name="Trio Report" logDir="/tmp/gm-genome_sys-2014-09-24_12_55_27--AzAi/anonymous12/logs_main">
  <operationtype typeClass="Workflow::OperationType::Model">
    <inputproperty>contains_header_10</inputproperty>
    <inputproperty>contains_header_11</inputproperty>
    <inputproperty>contains_header_2</inputproperty>
    <inputproperty>contains_header_3</inputproperty>
    <inputproperty>contains_header_6</inputproperty>
    <inputproperty>contains_header_7</inputproperty>
    <inputproperty>file_name_10</inputproperty>
    <inputproperty>file_name_11</inputproperty>
    <inputproperty>file_name_2</inputproperty>
    <inputproperty>file_name_3</inputproperty>
    <inputproperty>file_name_6</inputproperty>
    <inputproperty>file_name_7</inputproperty>
    <inputproperty>input_vcf_0</inputproperty>
    <inputproperty>input_vcf_1</inputproperty>
    <inputproperty>input_vcf_4</inputproperty>
    <inputproperty>input_vcf_5</inputproperty>
    <inputproperty>input_vcf_8</inputproperty>
    <inputproperty>input_vcf_9</inputproperty>
    <inputproperty>output_directory_0</inputproperty>
    <inputproperty>output_directory_1</inputproperty>
    <inputproperty>output_directory_4</inputproperty>
    <inputproperty>output_directory_5</inputproperty>
    <inputproperty>output_directory_8</inputproperty>
    <inputproperty>output_directory_9</inputproperty>
    <inputproperty>output_file_10</inputproperty>
    <inputproperty>output_file_11</inputproperty>
    <inputproperty>output_file_2</inputproperty>
    <inputproperty>output_file_3</inputproperty>
    <inputproperty>output_file_6</inputproperty>
    <inputproperty>output_file_7</inputproperty>
    <inputproperty>plan_json_0</inputproperty>
    <inputproperty>plan_json_1</inputproperty>
    <inputproperty>plan_json_4</inputproperty>
    <inputproperty>plan_json_5</inputproperty>
    <inputproperty>plan_json_8</inputproperty>
    <inputproperty>plan_json_9</inputproperty>
    <inputproperty>provider_json_0</inputproperty>
    <inputproperty>provider_json_1</inputproperty>
    <inputproperty>provider_json_4</inputproperty>
    <inputproperty>provider_json_5</inputproperty>
    <inputproperty>provider_json_8</inputproperty>
    <inputproperty>provider_json_9</inputproperty>
    <inputproperty>separator_10</inputproperty>
    <inputproperty>separator_11</inputproperty>
    <inputproperty>separator_2</inputproperty>
    <inputproperty>separator_3</inputproperty>
    <inputproperty>separator_6</inputproperty>
    <inputproperty>separator_7</inputproperty>
    <inputproperty>sort_columns_10</inputproperty>
    <inputproperty>sort_columns_11</inputproperty>
    <inputproperty>sort_columns_2</inputproperty>
    <inputproperty>sort_columns_3</inputproperty>
    <inputproperty>sort_columns_6</inputproperty>
    <inputproperty>sort_columns_7</inputproperty>
    <inputproperty>split_indicators_10</inputproperty>
    <inputproperty>split_indicators_11</inputproperty>
    <inputproperty>split_indicators_2</inputproperty>
    <inputproperty>split_indicators_3</inputproperty>
    <inputproperty>split_indicators_6</inputproperty>
    <inputproperty>split_indicators_7</inputproperty>
    <inputproperty>translations_0</inputproperty>
    <inputproperty>translations_1</inputproperty>
    <inputproperty>translations_4</inputproperty>
    <inputproperty>translations_5</inputproperty>
    <inputproperty>translations_8</inputproperty>
    <inputproperty>translations_9</inputproperty>
    <inputproperty>variant_type_0</inputproperty>
    <inputproperty>variant_type_1</inputproperty>
    <inputproperty>variant_type_4</inputproperty>
    <inputproperty>variant_type_5</inputproperty>
    <inputproperty>variant_type_8</inputproperty>
    <inputproperty>variant_type_9</inputproperty>
    <outputproperty>reports</outputproperty>
  </operationtype>
  <operation name="Combine snv and indel 10">
    <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::PostProcessing::CombineReports">
      <inputproperty>contains_header</inputproperty>
      <inputproperty>output_file</inputproperty>
      <inputproperty>reports</inputproperty>
      <inputproperty>separator</inputproperty>
      <outputproperty>output_file</outputproperty>
      <outputproperty>result</outputproperty>
    </operationtype>
  </operation>
  <operation name="Combine snv and indel 11">
    <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::PostProcessing::CombineReports">
      <inputproperty>contains_header</inputproperty>
      <inputproperty>output_file</inputproperty>
      <inputproperty>reports</inputproperty>
      <inputproperty>separator</inputproperty>
      <outputproperty>output_file</outputproperty>
      <outputproperty>result</outputproperty>
    </operationtype>
  </operation>
  <operation name="Combine snv and indel 2">
    <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::PostProcessing::CombineReports">
      <inputproperty>contains_header</inputproperty>
      <inputproperty>output_file</inputproperty>
      <inputproperty>reports</inputproperty>
      <inputproperty>separator</inputproperty>
      <outputproperty>output_file</outputproperty>
      <outputproperty>result</outputproperty>
    </operationtype>
  </operation>
  <operation name="Combine snv and indel 3">
    <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::PostProcessing::CombineReports">
      <inputproperty>contains_header</inputproperty>
      <inputproperty>output_file</inputproperty>
      <inputproperty>reports</inputproperty>
      <inputproperty>separator</inputproperty>
      <outputproperty>output_file</outputproperty>
      <outputproperty>result</outputproperty>
    </operationtype>
  </operation>
  <operation name="Combine snv and indel 6">
    <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::PostProcessing::CombineReports">
      <inputproperty>contains_header</inputproperty>
      <inputproperty>output_file</inputproperty>
      <inputproperty>reports</inputproperty>
      <inputproperty>separator</inputproperty>
      <outputproperty>output_file</outputproperty>
      <outputproperty>result</outputproperty>
    </operationtype>
  </operation>
  <operation name="Combine snv and indel 7">
    <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::PostProcessing::CombineReports">
      <inputproperty>contains_header</inputproperty>
      <inputproperty>output_file</inputproperty>
      <inputproperty>reports</inputproperty>
      <inputproperty>separator</inputproperty>
      <outputproperty>output_file</outputproperty>
      <outputproperty>result</outputproperty>
    </operationtype>
  </operation>
  <operation name="Converge 10">
    <operationtype typeClass="Workflow::OperationType::Converge">
      <inputproperty>snvs_output_dir</inputproperty>
      <inputproperty>indels_output_dir</inputproperty>
      <outputproperty>output_dirs</outputproperty>
    </operationtype>
  </operation>
  <operation name="Converge 11">
    <operationtype typeClass="Workflow::OperationType::Converge">
      <inputproperty>snvs_output_dir</inputproperty>
      <inputproperty>indels_output_dir</inputproperty>
      <outputproperty>output_dirs</outputproperty>
    </operationtype>
  </operation>
  <operation name="Converge 2">
    <operationtype typeClass="Workflow::OperationType::Converge">
      <inputproperty>snvs_output_dir</inputproperty>
      <inputproperty>indels_output_dir</inputproperty>
      <outputproperty>output_dirs</outputproperty>
    </operationtype>
  </operation>
  <operation name="Converge 3">
    <operationtype typeClass="Workflow::OperationType::Converge">
      <inputproperty>snvs_output_dir</inputproperty>
      <inputproperty>indels_output_dir</inputproperty>
      <outputproperty>output_dirs</outputproperty>
    </operationtype>
  </operation>
  <operation name="Converge 6">
    <operationtype typeClass="Workflow::OperationType::Converge">
      <inputproperty>snvs_output_dir</inputproperty>
      <inputproperty>indels_output_dir</inputproperty>
      <outputproperty>output_dirs</outputproperty>
    </operationtype>
  </operation>
  <operation name="Converge 7">
    <operationtype typeClass="Workflow::OperationType::Converge">
      <inputproperty>snvs_output_dir</inputproperty>
      <inputproperty>indels_output_dir</inputproperty>
      <outputproperty>output_dirs</outputproperty>
    </operationtype>
  </operation>
  <operation name="Final Converge">
    <operationtype typeClass="Workflow::OperationType::Converge">
      <inputproperty>Combine snv and indel 2</inputproperty>
      <inputproperty>Combine snv and indel 3</inputproperty>
      <inputproperty>Combine snv and indel 6</inputproperty>
      <inputproperty>Combine snv and indel 7</inputproperty>
      <inputproperty>Combine snv and indel 10</inputproperty>
      <inputproperty>Combine snv and indel 11</inputproperty>
      <outputproperty>reports</outputproperty>
    </operationtype>
  </operation>
  <operation name="Generate filenames 10">
    <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::PostProcessing::CombineSnvIndelReports">
      <inputproperty>file_name</inputproperty>
      <inputproperty>input_directories</inputproperty>
      <outputproperty>reports</outputproperty>
      <outputproperty>result</outputproperty>
    </operationtype>
  </operation>
  <operation name="Generate filenames 11">
    <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::PostProcessing::CombineSnvIndelReports">
      <inputproperty>file_name</inputproperty>
      <inputproperty>input_directories</inputproperty>
      <outputproperty>reports</outputproperty>
      <outputproperty>result</outputproperty>
    </operationtype>
  </operation>
  <operation name="Generate filenames 2">
    <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::PostProcessing::CombineSnvIndelReports">
      <inputproperty>file_name</inputproperty>
      <inputproperty>input_directories</inputproperty>
      <outputproperty>reports</outputproperty>
      <outputproperty>result</outputproperty>
    </operationtype>
  </operation>
  <operation name="Generate filenames 3">
    <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::PostProcessing::CombineSnvIndelReports">
      <inputproperty>file_name</inputproperty>
      <inputproperty>input_directories</inputproperty>
      <outputproperty>reports</outputproperty>
      <outputproperty>result</outputproperty>
    </operationtype>
  </operation>
  <operation name="Generate filenames 6">
    <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::PostProcessing::CombineSnvIndelReports">
      <inputproperty>file_name</inputproperty>
      <inputproperty>input_directories</inputproperty>
      <outputproperty>reports</outputproperty>
      <outputproperty>result</outputproperty>
    </operationtype>
  </operation>
  <operation name="Generate filenames 7">
    <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::PostProcessing::CombineSnvIndelReports">
      <inputproperty>file_name</inputproperty>
      <inputproperty>input_directories</inputproperty>
      <outputproperty>reports</outputproperty>
      <outputproperty>result</outputproperty>
    </operationtype>
  </operation>
  <operation name="Variant Reporting (indels) 1" logDir="/tmp/gm-genome_sys-2014-09-24_12_55_27--AzAi/anonymous12/germline/test_roi/logs_indels">
    <operationtype typeClass="Workflow::OperationType::Model">
      <inputproperty>input_vcf</inputproperty>
      <inputproperty>output_directory</inputproperty>
      <inputproperty>plan_json</inputproperty>
      <inputproperty>provider_json</inputproperty>
      <inputproperty>translations</inputproperty>
      <inputproperty>variant_type</inputproperty>
      <outputproperty>output_directory</outputproperty>
    </operationtype>
    <operation name="BamReadcount">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>provider_json</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_vcf</outputproperty>
      </operationtype>
      <operation name="Annotate vcf with readcounts">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::BamReadcount::Annotate">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>readcount_results</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Get inputs from provider and plan">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::BamReadcount::Adaptor">
          <inputproperty>plan_json</inputproperty>
          <inputproperty>provider_json</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>aligned_bam_result_id</outputproperty>
          <outputproperty>insertion_centric</outputproperty>
          <outputproperty>max_count</outputproperty>
          <outputproperty>minimum_base_quality</outputproperty>
          <outputproperty>minimum_mapping_quality</outputproperty>
          <outputproperty>per_library</outputproperty>
          <outputproperty>result</outputproperty>
          <outputproperty>variant_type</outputproperty>
          <outputproperty>version</outputproperty>
        </operationtype>
      </operation>
      <operation name="Run bam-readcount" parallelBy="aligned_bam_result_id">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::BamReadcount::Run">
          <inputproperty>aligned_bam_result_id</inputproperty>
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>insertion_centric</inputproperty>
          <inputproperty>max_count</inputproperty>
          <inputproperty>minimum_base_quality</inputproperty>
          <inputproperty>minimum_mapping_quality</inputproperty>
          <inputproperty>per_library</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <inputproperty>version</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <link fromOperation="Annotate vcf with readcounts" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Annotate vcf with readcounts" toProperty="variant_type"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="aligned_bam_result_id" toOperation="Run bam-readcount" toProperty="aligned_bam_result_id"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="insertion_centric" toOperation="Run bam-readcount" toProperty="insertion_centric"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="max_count" toOperation="Run bam-readcount" toProperty="max_count"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="minimum_base_quality" toOperation="Run bam-readcount" toProperty="minimum_base_quality"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="minimum_mapping_quality" toOperation="Run bam-readcount" toProperty="minimum_mapping_quality"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="per_library" toOperation="Run bam-readcount" toProperty="per_library"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Run bam-readcount" toProperty="variant_type"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="version" toOperation="Run bam-readcount" toProperty="version"/>
      <link fromOperation="Run bam-readcount" fromProperty="output_result" toOperation="Annotate vcf with readcounts" toProperty="readcount_results"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Annotate vcf with readcounts" toProperty="input_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from provider and plan" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="provider_json" toOperation="Get inputs from provider and plan" toProperty="provider_json"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from provider and plan" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run bam-readcount" toProperty="input_vcf"/>
    </operation>
    <operation name="Generate Reports">
      <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::ReportGenerator">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>output_directory</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>translations</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_directory</outputproperty>
        <outputproperty>result</outputproperty>
      </operationtype>
    </operation>
    <operation name="dbsnp">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>provider_json</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>output_vcf</outputproperty>
      </operationtype>
      <operation name="Get inputs from provider and plan">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Joinx::Dbsnp::Adaptor">
          <inputproperty>plan_json</inputproperty>
          <inputproperty>provider_json</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>info_string</outputproperty>
          <outputproperty>joinx_version</outputproperty>
          <outputproperty>result</outputproperty>
          <outputproperty>variant_type</outputproperty>
          <outputproperty>vcf</outputproperty>
        </operationtype>
      </operation>
      <operation name="Run dbsnp">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Joinx::Run">
          <inputproperty>info_string</inputproperty>
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>joinx_version</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <inputproperty>vcf</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <link fromOperation="Get inputs from provider and plan" fromProperty="info_string" toOperation="Run dbsnp" toProperty="info_string"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="joinx_version" toOperation="Run dbsnp" toProperty="joinx_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Run dbsnp" toProperty="variant_type"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="vcf" toOperation="Run dbsnp" toProperty="vcf"/>
      <link fromOperation="Run dbsnp" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
      <link fromOperation="Run dbsnp" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from provider and plan" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="provider_json" toOperation="Get inputs from provider and plan" toProperty="provider_json"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from provider and plan" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run dbsnp" toProperty="input_vcf"/>
    </operation>
    <operation name="homo-polymer">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>provider_json</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>output_vcf</outputproperty>
      </operationtype>
      <operation name="Get inputs from provider and plan">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Joinx::HomoPolymer::Adaptor">
          <inputproperty>plan_json</inputproperty>
          <inputproperty>provider_json</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>homopolymer_list_id</outputproperty>
          <outputproperty>info_string</outputproperty>
          <outputproperty>joinx_version</outputproperty>
          <outputproperty>max_length</outputproperty>
          <outputproperty>result</outputproperty>
          <outputproperty>variant_type</outputproperty>
        </operationtype>
      </operation>
      <operation name="Run homo-polymer">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Joinx::HomoPolymer::Run">
          <inputproperty>homopolymer_list_id</inputproperty>
          <inputproperty>info_string</inputproperty>
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>joinx_version</inputproperty>
          <inputproperty>max_length</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <link fromOperation="Get inputs from provider and plan" fromProperty="homopolymer_list_id" toOperation="Run homo-polymer" toProperty="homopolymer_list_id"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="info_string" toOperation="Run homo-polymer" toProperty="info_string"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="joinx_version" toOperation="Run homo-polymer" toProperty="joinx_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="max_length" toOperation="Run homo-polymer" toProperty="max_length"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Run homo-polymer" toProperty="variant_type"/>
      <link fromOperation="Run homo-polymer" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
      <link fromOperation="Run homo-polymer" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from provider and plan" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="provider_json" toOperation="Get inputs from provider and plan" toProperty="provider_json"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from provider and plan" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run homo-polymer" toProperty="input_vcf"/>
    </operation>
    <operation name="vep">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>provider_json</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>output_vcf</outputproperty>
      </operationtype>
      <operation name="Get inputs from provider and plan">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Vep::Adaptor">
          <inputproperty>plan_json</inputproperty>
          <inputproperty>provider_json</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>custom_annotation_tags</outputproperty>
          <outputproperty>ensembl_version</outputproperty>
          <outputproperty>feature_list_ids</outputproperty>
          <outputproperty>joinx_version</outputproperty>
          <outputproperty>plugins</outputproperty>
          <outputproperty>plugins_version</outputproperty>
          <outputproperty>reference_fasta</outputproperty>
          <outputproperty>result</outputproperty>
          <outputproperty>species</outputproperty>
          <outputproperty>variant_type</outputproperty>
        </operationtype>
      </operation>
      <operation name="Run vep">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;32000] rusage[mem=32000]' -M 32000000" commandClass="Genome::VariantReporting::Vep::Run">
          <inputproperty>ensembl_version</inputproperty>
          <inputproperty>feature_list_ids</inputproperty>
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>joinx_version</inputproperty>
          <inputproperty>plugins_version</inputproperty>
          <inputproperty>reference_fasta</inputproperty>
          <inputproperty>species</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <link fromOperation="Get inputs from provider and plan" fromProperty="custom_annotation_tags" toOperation="Run vep" toProperty="custom_annotation_tags"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="ensembl_version" toOperation="Run vep" toProperty="ensembl_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="feature_list_ids" toOperation="Run vep" toProperty="feature_list_ids"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="joinx_version" toOperation="Run vep" toProperty="joinx_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="plugins_version" toOperation="Run vep" toProperty="plugins_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="plugins" toOperation="Run vep" toProperty="plugins"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="reference_fasta" toOperation="Run vep" toProperty="reference_fasta"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="species" toOperation="Run vep" toProperty="species"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Run vep" toProperty="variant_type"/>
      <link fromOperation="Run vep" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
      <link fromOperation="Run vep" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from provider and plan" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="provider_json" toOperation="Get inputs from provider and plan" toProperty="provider_json"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from provider and plan" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run vep" toProperty="input_vcf"/>
    </operation>
    <link fromOperation="BamReadcount" fromProperty="output_vcf" toOperation="dbsnp" toProperty="input_vcf"/>
    <link fromOperation="Generate Reports" fromProperty="output_directory" toOperation="output connector" toProperty="output_directory"/>
    <link fromOperation="dbsnp" fromProperty="output_vcf" toOperation="homo-polymer" toProperty="input_vcf"/>
    <link fromOperation="homo-polymer" fromProperty="output_vcf" toOperation="Generate Reports" toProperty="input_vcf"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="BamReadcount" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="provider_json" toOperation="BamReadcount" toProperty="provider_json"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="BamReadcount" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="output_directory" toOperation="Generate Reports" toProperty="output_directory"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Reports" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="translations" toOperation="Generate Reports" toProperty="translations"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Reports" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="dbsnp" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="provider_json" toOperation="dbsnp" toProperty="provider_json"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="dbsnp" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="homo-polymer" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="provider_json" toOperation="homo-polymer" toProperty="provider_json"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="homo-polymer" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="input_vcf" toOperation="vep" toProperty="input_vcf"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="vep" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="provider_json" toOperation="vep" toProperty="provider_json"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="vep" toProperty="variant_type"/>
    <link fromOperation="vep" fromProperty="output_vcf" toOperation="BamReadcount" toProperty="input_vcf"/>
  </operation>
  <operation name="Variant Reporting (indels) 5" logDir="/tmp/gm-genome_sys-2014-09-24_12_55_27--AzAi/anonymous12/discovery/test_roi/logs_indels">
    <operationtype typeClass="Workflow::OperationType::Model">
      <inputproperty>input_vcf</inputproperty>
      <inputproperty>output_directory</inputproperty>
      <inputproperty>plan_json</inputproperty>
      <inputproperty>provider_json</inputproperty>
      <inputproperty>translations</inputproperty>
      <inputproperty>variant_type</inputproperty>
      <outputproperty>output_directory</outputproperty>
    </operationtype>
    <operation name="BamReadcount">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>provider_json</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_vcf</outputproperty>
      </operationtype>
      <operation name="Annotate vcf with readcounts">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::BamReadcount::Annotate">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>readcount_results</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Get inputs from provider and plan">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::BamReadcount::Adaptor">
          <inputproperty>plan_json</inputproperty>
          <inputproperty>provider_json</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>aligned_bam_result_id</outputproperty>
          <outputproperty>insertion_centric</outputproperty>
          <outputproperty>max_count</outputproperty>
          <outputproperty>minimum_base_quality</outputproperty>
          <outputproperty>minimum_mapping_quality</outputproperty>
          <outputproperty>per_library</outputproperty>
          <outputproperty>result</outputproperty>
          <outputproperty>variant_type</outputproperty>
          <outputproperty>version</outputproperty>
        </operationtype>
      </operation>
      <operation name="Run bam-readcount" parallelBy="aligned_bam_result_id">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::BamReadcount::Run">
          <inputproperty>aligned_bam_result_id</inputproperty>
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>insertion_centric</inputproperty>
          <inputproperty>max_count</inputproperty>
          <inputproperty>minimum_base_quality</inputproperty>
          <inputproperty>minimum_mapping_quality</inputproperty>
          <inputproperty>per_library</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <inputproperty>version</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <link fromOperation="Annotate vcf with readcounts" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Annotate vcf with readcounts" toProperty="variant_type"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="aligned_bam_result_id" toOperation="Run bam-readcount" toProperty="aligned_bam_result_id"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="insertion_centric" toOperation="Run bam-readcount" toProperty="insertion_centric"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="max_count" toOperation="Run bam-readcount" toProperty="max_count"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="minimum_base_quality" toOperation="Run bam-readcount" toProperty="minimum_base_quality"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="minimum_mapping_quality" toOperation="Run bam-readcount" toProperty="minimum_mapping_quality"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="per_library" toOperation="Run bam-readcount" toProperty="per_library"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Run bam-readcount" toProperty="variant_type"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="version" toOperation="Run bam-readcount" toProperty="version"/>
      <link fromOperation="Run bam-readcount" fromProperty="output_result" toOperation="Annotate vcf with readcounts" toProperty="readcount_results"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Annotate vcf with readcounts" toProperty="input_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from provider and plan" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="provider_json" toOperation="Get inputs from provider and plan" toProperty="provider_json"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from provider and plan" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run bam-readcount" toProperty="input_vcf"/>
    </operation>
    <operation name="Generate Reports">
      <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::ReportGenerator">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>output_directory</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>translations</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_directory</outputproperty>
        <outputproperty>result</outputproperty>
      </operationtype>
    </operation>
    <operation name="dbsnp">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>provider_json</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>output_vcf</outputproperty>
      </operationtype>
      <operation name="Get inputs from provider and plan">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Joinx::Dbsnp::Adaptor">
          <inputproperty>plan_json</inputproperty>
          <inputproperty>provider_json</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>info_string</outputproperty>
          <outputproperty>joinx_version</outputproperty>
          <outputproperty>result</outputproperty>
          <outputproperty>variant_type</outputproperty>
          <outputproperty>vcf</outputproperty>
        </operationtype>
      </operation>
      <operation name="Run dbsnp">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Joinx::Run">
          <inputproperty>info_string</inputproperty>
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>joinx_version</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <inputproperty>vcf</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <link fromOperation="Get inputs from provider and plan" fromProperty="info_string" toOperation="Run dbsnp" toProperty="info_string"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="joinx_version" toOperation="Run dbsnp" toProperty="joinx_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Run dbsnp" toProperty="variant_type"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="vcf" toOperation="Run dbsnp" toProperty="vcf"/>
      <link fromOperation="Run dbsnp" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
      <link fromOperation="Run dbsnp" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from provider and plan" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="provider_json" toOperation="Get inputs from provider and plan" toProperty="provider_json"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from provider and plan" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run dbsnp" toProperty="input_vcf"/>
    </operation>
    <operation name="homo-polymer">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>provider_json</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>output_vcf</outputproperty>
      </operationtype>
      <operation name="Get inputs from provider and plan">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Joinx::HomoPolymer::Adaptor">
          <inputproperty>plan_json</inputproperty>
          <inputproperty>provider_json</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>homopolymer_list_id</outputproperty>
          <outputproperty>info_string</outputproperty>
          <outputproperty>joinx_version</outputproperty>
          <outputproperty>max_length</outputproperty>
          <outputproperty>result</outputproperty>
          <outputproperty>variant_type</outputproperty>
        </operationtype>
      </operation>
      <operation name="Run homo-polymer">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Joinx::HomoPolymer::Run">
          <inputproperty>homopolymer_list_id</inputproperty>
          <inputproperty>info_string</inputproperty>
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>joinx_version</inputproperty>
          <inputproperty>max_length</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <link fromOperation="Get inputs from provider and plan" fromProperty="homopolymer_list_id" toOperation="Run homo-polymer" toProperty="homopolymer_list_id"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="info_string" toOperation="Run homo-polymer" toProperty="info_string"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="joinx_version" toOperation="Run homo-polymer" toProperty="joinx_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="max_length" toOperation="Run homo-polymer" toProperty="max_length"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Run homo-polymer" toProperty="variant_type"/>
      <link fromOperation="Run homo-polymer" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
      <link fromOperation="Run homo-polymer" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from provider and plan" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="provider_json" toOperation="Get inputs from provider and plan" toProperty="provider_json"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from provider and plan" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run homo-polymer" toProperty="input_vcf"/>
    </operation>
    <operation name="vep">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>provider_json</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>output_vcf</outputproperty>
      </operationtype>
      <operation name="Get inputs from provider and plan">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Vep::Adaptor">
          <inputproperty>plan_json</inputproperty>
          <inputproperty>provider_json</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>custom_annotation_tags</outputproperty>
          <outputproperty>ensembl_version</outputproperty>
          <outputproperty>feature_list_ids</outputproperty>
          <outputproperty>joinx_version</outputproperty>
          <outputproperty>plugins</outputproperty>
          <outputproperty>plugins_version</outputproperty>
          <outputproperty>reference_fasta</outputproperty>
          <outputproperty>result</outputproperty>
          <outputproperty>species</outputproperty>
          <outputproperty>variant_type</outputproperty>
        </operationtype>
      </operation>
      <operation name="Run vep">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;32000] rusage[mem=32000]' -M 32000000" commandClass="Genome::VariantReporting::Vep::Run">
          <inputproperty>ensembl_version</inputproperty>
          <inputproperty>feature_list_ids</inputproperty>
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>joinx_version</inputproperty>
          <inputproperty>plugins_version</inputproperty>
          <inputproperty>reference_fasta</inputproperty>
          <inputproperty>species</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <link fromOperation="Get inputs from provider and plan" fromProperty="custom_annotation_tags" toOperation="Run vep" toProperty="custom_annotation_tags"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="ensembl_version" toOperation="Run vep" toProperty="ensembl_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="feature_list_ids" toOperation="Run vep" toProperty="feature_list_ids"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="joinx_version" toOperation="Run vep" toProperty="joinx_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="plugins_version" toOperation="Run vep" toProperty="plugins_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="plugins" toOperation="Run vep" toProperty="plugins"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="reference_fasta" toOperation="Run vep" toProperty="reference_fasta"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="species" toOperation="Run vep" toProperty="species"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Run vep" toProperty="variant_type"/>
      <link fromOperation="Run vep" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
      <link fromOperation="Run vep" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from provider and plan" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="provider_json" toOperation="Get inputs from provider and plan" toProperty="provider_json"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from provider and plan" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run vep" toProperty="input_vcf"/>
    </operation>
    <link fromOperation="BamReadcount" fromProperty="output_vcf" toOperation="dbsnp" toProperty="input_vcf"/>
    <link fromOperation="Generate Reports" fromProperty="output_directory" toOperation="output connector" toProperty="output_directory"/>
    <link fromOperation="dbsnp" fromProperty="output_vcf" toOperation="homo-polymer" toProperty="input_vcf"/>
    <link fromOperation="homo-polymer" fromProperty="output_vcf" toOperation="Generate Reports" toProperty="input_vcf"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="BamReadcount" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="provider_json" toOperation="BamReadcount" toProperty="provider_json"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="BamReadcount" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="output_directory" toOperation="Generate Reports" toProperty="output_directory"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Reports" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="translations" toOperation="Generate Reports" toProperty="translations"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Reports" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="dbsnp" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="provider_json" toOperation="dbsnp" toProperty="provider_json"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="dbsnp" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="homo-polymer" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="provider_json" toOperation="homo-polymer" toProperty="provider_json"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="homo-polymer" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="input_vcf" toOperation="vep" toProperty="input_vcf"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="vep" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="provider_json" toOperation="vep" toProperty="provider_json"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="vep" toProperty="variant_type"/>
    <link fromOperation="vep" fromProperty="output_vcf" toOperation="BamReadcount" toProperty="input_vcf"/>
  </operation>
  <operation name="Variant Reporting (indels) 9" logDir="/tmp/gm-genome_sys-2014-09-24_12_55_27--AzAi/anonymous12/additional/test_roi/logs_indels">
    <operationtype typeClass="Workflow::OperationType::Model">
      <inputproperty>input_vcf</inputproperty>
      <inputproperty>output_directory</inputproperty>
      <inputproperty>plan_json</inputproperty>
      <inputproperty>provider_json</inputproperty>
      <inputproperty>translations</inputproperty>
      <inputproperty>variant_type</inputproperty>
      <outputproperty>output_directory</outputproperty>
    </operationtype>
    <operation name="BamReadcount">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>provider_json</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_vcf</outputproperty>
      </operationtype>
      <operation name="Annotate vcf with readcounts">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::BamReadcount::Annotate">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>readcount_results</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Get inputs from provider and plan">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::BamReadcount::Adaptor">
          <inputproperty>plan_json</inputproperty>
          <inputproperty>provider_json</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>aligned_bam_result_id</outputproperty>
          <outputproperty>insertion_centric</outputproperty>
          <outputproperty>max_count</outputproperty>
          <outputproperty>minimum_base_quality</outputproperty>
          <outputproperty>minimum_mapping_quality</outputproperty>
          <outputproperty>per_library</outputproperty>
          <outputproperty>result</outputproperty>
          <outputproperty>variant_type</outputproperty>
          <outputproperty>version</outputproperty>
        </operationtype>
      </operation>
      <operation name="Run bam-readcount" parallelBy="aligned_bam_result_id">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::BamReadcount::Run">
          <inputproperty>aligned_bam_result_id</inputproperty>
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>insertion_centric</inputproperty>
          <inputproperty>max_count</inputproperty>
          <inputproperty>minimum_base_quality</inputproperty>
          <inputproperty>minimum_mapping_quality</inputproperty>
          <inputproperty>per_library</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <inputproperty>version</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <link fromOperation="Annotate vcf with readcounts" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Annotate vcf with readcounts" toProperty="variant_type"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="aligned_bam_result_id" toOperation="Run bam-readcount" toProperty="aligned_bam_result_id"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="insertion_centric" toOperation="Run bam-readcount" toProperty="insertion_centric"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="max_count" toOperation="Run bam-readcount" toProperty="max_count"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="minimum_base_quality" toOperation="Run bam-readcount" toProperty="minimum_base_quality"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="minimum_mapping_quality" toOperation="Run bam-readcount" toProperty="minimum_mapping_quality"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="per_library" toOperation="Run bam-readcount" toProperty="per_library"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Run bam-readcount" toProperty="variant_type"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="version" toOperation="Run bam-readcount" toProperty="version"/>
      <link fromOperation="Run bam-readcount" fromProperty="output_result" toOperation="Annotate vcf with readcounts" toProperty="readcount_results"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Annotate vcf with readcounts" toProperty="input_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from provider and plan" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="provider_json" toOperation="Get inputs from provider and plan" toProperty="provider_json"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from provider and plan" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run bam-readcount" toProperty="input_vcf"/>
    </operation>
    <operation name="Generate Reports">
      <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::ReportGenerator">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>output_directory</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>translations</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_directory</outputproperty>
        <outputproperty>result</outputproperty>
      </operationtype>
    </operation>
    <operation name="dbsnp">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>provider_json</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>output_vcf</outputproperty>
      </operationtype>
      <operation name="Get inputs from provider and plan">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Joinx::Dbsnp::Adaptor">
          <inputproperty>plan_json</inputproperty>
          <inputproperty>provider_json</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>info_string</outputproperty>
          <outputproperty>joinx_version</outputproperty>
          <outputproperty>result</outputproperty>
          <outputproperty>variant_type</outputproperty>
          <outputproperty>vcf</outputproperty>
        </operationtype>
      </operation>
      <operation name="Run dbsnp">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Joinx::Run">
          <inputproperty>info_string</inputproperty>
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>joinx_version</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <inputproperty>vcf</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <link fromOperation="Get inputs from provider and plan" fromProperty="info_string" toOperation="Run dbsnp" toProperty="info_string"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="joinx_version" toOperation="Run dbsnp" toProperty="joinx_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Run dbsnp" toProperty="variant_type"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="vcf" toOperation="Run dbsnp" toProperty="vcf"/>
      <link fromOperation="Run dbsnp" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
      <link fromOperation="Run dbsnp" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from provider and plan" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="provider_json" toOperation="Get inputs from provider and plan" toProperty="provider_json"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from provider and plan" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run dbsnp" toProperty="input_vcf"/>
    </operation>
    <operation name="homo-polymer">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>provider_json</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>output_vcf</outputproperty>
      </operationtype>
      <operation name="Get inputs from provider and plan">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Joinx::HomoPolymer::Adaptor">
          <inputproperty>plan_json</inputproperty>
          <inputproperty>provider_json</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>homopolymer_list_id</outputproperty>
          <outputproperty>info_string</outputproperty>
          <outputproperty>joinx_version</outputproperty>
          <outputproperty>max_length</outputproperty>
          <outputproperty>result</outputproperty>
          <outputproperty>variant_type</outputproperty>
        </operationtype>
      </operation>
      <operation name="Run homo-polymer">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Joinx::HomoPolymer::Run">
          <inputproperty>homopolymer_list_id</inputproperty>
          <inputproperty>info_string</inputproperty>
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>joinx_version</inputproperty>
          <inputproperty>max_length</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <link fromOperation="Get inputs from provider and plan" fromProperty="homopolymer_list_id" toOperation="Run homo-polymer" toProperty="homopolymer_list_id"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="info_string" toOperation="Run homo-polymer" toProperty="info_string"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="joinx_version" toOperation="Run homo-polymer" toProperty="joinx_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="max_length" toOperation="Run homo-polymer" toProperty="max_length"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Run homo-polymer" toProperty="variant_type"/>
      <link fromOperation="Run homo-polymer" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
      <link fromOperation="Run homo-polymer" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from provider and plan" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="provider_json" toOperation="Get inputs from provider and plan" toProperty="provider_json"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from provider and plan" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run homo-polymer" toProperty="input_vcf"/>
    </operation>
    <operation name="vep">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>provider_json</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>output_vcf</outputproperty>
      </operationtype>
      <operation name="Get inputs from provider and plan">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Vep::Adaptor">
          <inputproperty>plan_json</inputproperty>
          <inputproperty>provider_json</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>custom_annotation_tags</outputproperty>
          <outputproperty>ensembl_version</outputproperty>
          <outputproperty>feature_list_ids</outputproperty>
          <outputproperty>joinx_version</outputproperty>
          <outputproperty>plugins</outputproperty>
          <outputproperty>plugins_version</outputproperty>
          <outputproperty>reference_fasta</outputproperty>
          <outputproperty>result</outputproperty>
          <outputproperty>species</outputproperty>
          <outputproperty>variant_type</outputproperty>
        </operationtype>
      </operation>
      <operation name="Run vep">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;32000] rusage[mem=32000]' -M 32000000" commandClass="Genome::VariantReporting::Vep::Run">
          <inputproperty>ensembl_version</inputproperty>
          <inputproperty>feature_list_ids</inputproperty>
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>joinx_version</inputproperty>
          <inputproperty>plugins_version</inputproperty>
          <inputproperty>reference_fasta</inputproperty>
          <inputproperty>species</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <link fromOperation="Get inputs from provider and plan" fromProperty="custom_annotation_tags" toOperation="Run vep" toProperty="custom_annotation_tags"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="ensembl_version" toOperation="Run vep" toProperty="ensembl_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="feature_list_ids" toOperation="Run vep" toProperty="feature_list_ids"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="joinx_version" toOperation="Run vep" toProperty="joinx_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="plugins_version" toOperation="Run vep" toProperty="plugins_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="plugins" toOperation="Run vep" toProperty="plugins"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="reference_fasta" toOperation="Run vep" toProperty="reference_fasta"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="species" toOperation="Run vep" toProperty="species"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Run vep" toProperty="variant_type"/>
      <link fromOperation="Run vep" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
      <link fromOperation="Run vep" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from provider and plan" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="provider_json" toOperation="Get inputs from provider and plan" toProperty="provider_json"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from provider and plan" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run vep" toProperty="input_vcf"/>
    </operation>
    <link fromOperation="BamReadcount" fromProperty="output_vcf" toOperation="dbsnp" toProperty="input_vcf"/>
    <link fromOperation="Generate Reports" fromProperty="output_directory" toOperation="output connector" toProperty="output_directory"/>
    <link fromOperation="dbsnp" fromProperty="output_vcf" toOperation="homo-polymer" toProperty="input_vcf"/>
    <link fromOperation="homo-polymer" fromProperty="output_vcf" toOperation="Generate Reports" toProperty="input_vcf"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="BamReadcount" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="provider_json" toOperation="BamReadcount" toProperty="provider_json"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="BamReadcount" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="output_directory" toOperation="Generate Reports" toProperty="output_directory"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Reports" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="translations" toOperation="Generate Reports" toProperty="translations"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Reports" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="dbsnp" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="provider_json" toOperation="dbsnp" toProperty="provider_json"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="dbsnp" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="homo-polymer" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="provider_json" toOperation="homo-polymer" toProperty="provider_json"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="homo-polymer" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="input_vcf" toOperation="vep" toProperty="input_vcf"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="vep" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="provider_json" toOperation="vep" toProperty="provider_json"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="vep" toProperty="variant_type"/>
    <link fromOperation="vep" fromProperty="output_vcf" toOperation="BamReadcount" toProperty="input_vcf"/>
  </operation>
  <operation name="Variant Reporting (snvs) 0" logDir="/tmp/gm-genome_sys-2014-09-24_12_55_27--AzAi/anonymous12/germline/test_roi/logs_snvs">
    <operationtype typeClass="Workflow::OperationType::Model">
      <inputproperty>input_vcf</inputproperty>
      <inputproperty>output_directory</inputproperty>
      <inputproperty>plan_json</inputproperty>
      <inputproperty>provider_json</inputproperty>
      <inputproperty>translations</inputproperty>
      <inputproperty>variant_type</inputproperty>
      <outputproperty>output_directory</outputproperty>
    </operationtype>
    <operation name="BamReadcount">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>provider_json</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_vcf</outputproperty>
      </operationtype>
      <operation name="Annotate vcf with readcounts">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::BamReadcount::Annotate">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>readcount_results</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Get inputs from provider and plan">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::BamReadcount::Adaptor">
          <inputproperty>plan_json</inputproperty>
          <inputproperty>provider_json</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>aligned_bam_result_id</outputproperty>
          <outputproperty>insertion_centric</outputproperty>
          <outputproperty>max_count</outputproperty>
          <outputproperty>minimum_base_quality</outputproperty>
          <outputproperty>minimum_mapping_quality</outputproperty>
          <outputproperty>per_library</outputproperty>
          <outputproperty>result</outputproperty>
          <outputproperty>variant_type</outputproperty>
          <outputproperty>version</outputproperty>
        </operationtype>
      </operation>
      <operation name="Run bam-readcount" parallelBy="aligned_bam_result_id">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::BamReadcount::Run">
          <inputproperty>aligned_bam_result_id</inputproperty>
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>insertion_centric</inputproperty>
          <inputproperty>max_count</inputproperty>
          <inputproperty>minimum_base_quality</inputproperty>
          <inputproperty>minimum_mapping_quality</inputproperty>
          <inputproperty>per_library</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <inputproperty>version</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <link fromOperation="Annotate vcf with readcounts" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Annotate vcf with readcounts" toProperty="variant_type"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="aligned_bam_result_id" toOperation="Run bam-readcount" toProperty="aligned_bam_result_id"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="insertion_centric" toOperation="Run bam-readcount" toProperty="insertion_centric"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="max_count" toOperation="Run bam-readcount" toProperty="max_count"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="minimum_base_quality" toOperation="Run bam-readcount" toProperty="minimum_base_quality"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="minimum_mapping_quality" toOperation="Run bam-readcount" toProperty="minimum_mapping_quality"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="per_library" toOperation="Run bam-readcount" toProperty="per_library"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Run bam-readcount" toProperty="variant_type"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="version" toOperation="Run bam-readcount" toProperty="version"/>
      <link fromOperation="Run bam-readcount" fromProperty="output_result" toOperation="Annotate vcf with readcounts" toProperty="readcount_results"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Annotate vcf with readcounts" toProperty="input_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from provider and plan" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="provider_json" toOperation="Get inputs from provider and plan" toProperty="provider_json"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from provider and plan" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run bam-readcount" toProperty="input_vcf"/>
    </operation>
    <operation name="Generate Reports">
      <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::ReportGenerator">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>output_directory</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>translations</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_directory</outputproperty>
        <outputproperty>result</outputproperty>
      </operationtype>
    </operation>
    <operation name="dbsnp">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>provider_json</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>output_vcf</outputproperty>
      </operationtype>
      <operation name="Get inputs from provider and plan">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Joinx::Dbsnp::Adaptor">
          <inputproperty>plan_json</inputproperty>
          <inputproperty>provider_json</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>info_string</outputproperty>
          <outputproperty>joinx_version</outputproperty>
          <outputproperty>result</outputproperty>
          <outputproperty>variant_type</outputproperty>
          <outputproperty>vcf</outputproperty>
        </operationtype>
      </operation>
      <operation name="Run dbsnp">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Joinx::Run">
          <inputproperty>info_string</inputproperty>
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>joinx_version</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <inputproperty>vcf</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <link fromOperation="Get inputs from provider and plan" fromProperty="info_string" toOperation="Run dbsnp" toProperty="info_string"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="joinx_version" toOperation="Run dbsnp" toProperty="joinx_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Run dbsnp" toProperty="variant_type"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="vcf" toOperation="Run dbsnp" toProperty="vcf"/>
      <link fromOperation="Run dbsnp" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
      <link fromOperation="Run dbsnp" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from provider and plan" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="provider_json" toOperation="Get inputs from provider and plan" toProperty="provider_json"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from provider and plan" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run dbsnp" toProperty="input_vcf"/>
    </operation>
    <operation name="vep">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>provider_json</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>output_vcf</outputproperty>
      </operationtype>
      <operation name="Get inputs from provider and plan">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Vep::Adaptor">
          <inputproperty>plan_json</inputproperty>
          <inputproperty>provider_json</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>custom_annotation_tags</outputproperty>
          <outputproperty>ensembl_version</outputproperty>
          <outputproperty>feature_list_ids</outputproperty>
          <outputproperty>joinx_version</outputproperty>
          <outputproperty>plugins</outputproperty>
          <outputproperty>plugins_version</outputproperty>
          <outputproperty>reference_fasta</outputproperty>
          <outputproperty>result</outputproperty>
          <outputproperty>species</outputproperty>
          <outputproperty>variant_type</outputproperty>
        </operationtype>
      </operation>
      <operation name="Run vep">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;32000] rusage[mem=32000]' -M 32000000" commandClass="Genome::VariantReporting::Vep::Run">
          <inputproperty>ensembl_version</inputproperty>
          <inputproperty>feature_list_ids</inputproperty>
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>joinx_version</inputproperty>
          <inputproperty>plugins_version</inputproperty>
          <inputproperty>reference_fasta</inputproperty>
          <inputproperty>species</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <link fromOperation="Get inputs from provider and plan" fromProperty="custom_annotation_tags" toOperation="Run vep" toProperty="custom_annotation_tags"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="ensembl_version" toOperation="Run vep" toProperty="ensembl_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="feature_list_ids" toOperation="Run vep" toProperty="feature_list_ids"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="joinx_version" toOperation="Run vep" toProperty="joinx_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="plugins_version" toOperation="Run vep" toProperty="plugins_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="plugins" toOperation="Run vep" toProperty="plugins"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="reference_fasta" toOperation="Run vep" toProperty="reference_fasta"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="species" toOperation="Run vep" toProperty="species"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Run vep" toProperty="variant_type"/>
      <link fromOperation="Run vep" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
      <link fromOperation="Run vep" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from provider and plan" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="provider_json" toOperation="Get inputs from provider and plan" toProperty="provider_json"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from provider and plan" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run vep" toProperty="input_vcf"/>
    </operation>
    <link fromOperation="BamReadcount" fromProperty="output_vcf" toOperation="dbsnp" toProperty="input_vcf"/>
    <link fromOperation="Generate Reports" fromProperty="output_directory" toOperation="output connector" toProperty="output_directory"/>
    <link fromOperation="dbsnp" fromProperty="output_vcf" toOperation="Generate Reports" toProperty="input_vcf"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="BamReadcount" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="provider_json" toOperation="BamReadcount" toProperty="provider_json"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="BamReadcount" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="output_directory" toOperation="Generate Reports" toProperty="output_directory"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Reports" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="translations" toOperation="Generate Reports" toProperty="translations"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Reports" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="dbsnp" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="provider_json" toOperation="dbsnp" toProperty="provider_json"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="dbsnp" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="input_vcf" toOperation="vep" toProperty="input_vcf"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="vep" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="provider_json" toOperation="vep" toProperty="provider_json"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="vep" toProperty="variant_type"/>
    <link fromOperation="vep" fromProperty="output_vcf" toOperation="BamReadcount" toProperty="input_vcf"/>
  </operation>
  <operation name="Variant Reporting (snvs) 4" logDir="/tmp/gm-genome_sys-2014-09-24_12_55_27--AzAi/anonymous12/discovery/test_roi/logs_snvs">
    <operationtype typeClass="Workflow::OperationType::Model">
      <inputproperty>input_vcf</inputproperty>
      <inputproperty>output_directory</inputproperty>
      <inputproperty>plan_json</inputproperty>
      <inputproperty>provider_json</inputproperty>
      <inputproperty>translations</inputproperty>
      <inputproperty>variant_type</inputproperty>
      <outputproperty>output_directory</outputproperty>
    </operationtype>
    <operation name="BamReadcount">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>provider_json</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_vcf</outputproperty>
      </operationtype>
      <operation name="Annotate vcf with readcounts">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::BamReadcount::Annotate">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>readcount_results</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Get inputs from provider and plan">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::BamReadcount::Adaptor">
          <inputproperty>plan_json</inputproperty>
          <inputproperty>provider_json</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>aligned_bam_result_id</outputproperty>
          <outputproperty>insertion_centric</outputproperty>
          <outputproperty>max_count</outputproperty>
          <outputproperty>minimum_base_quality</outputproperty>
          <outputproperty>minimum_mapping_quality</outputproperty>
          <outputproperty>per_library</outputproperty>
          <outputproperty>result</outputproperty>
          <outputproperty>variant_type</outputproperty>
          <outputproperty>version</outputproperty>
        </operationtype>
      </operation>
      <operation name="Run bam-readcount" parallelBy="aligned_bam_result_id">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::BamReadcount::Run">
          <inputproperty>aligned_bam_result_id</inputproperty>
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>insertion_centric</inputproperty>
          <inputproperty>max_count</inputproperty>
          <inputproperty>minimum_base_quality</inputproperty>
          <inputproperty>minimum_mapping_quality</inputproperty>
          <inputproperty>per_library</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <inputproperty>version</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <link fromOperation="Annotate vcf with readcounts" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Annotate vcf with readcounts" toProperty="variant_type"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="aligned_bam_result_id" toOperation="Run bam-readcount" toProperty="aligned_bam_result_id"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="insertion_centric" toOperation="Run bam-readcount" toProperty="insertion_centric"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="max_count" toOperation="Run bam-readcount" toProperty="max_count"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="minimum_base_quality" toOperation="Run bam-readcount" toProperty="minimum_base_quality"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="minimum_mapping_quality" toOperation="Run bam-readcount" toProperty="minimum_mapping_quality"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="per_library" toOperation="Run bam-readcount" toProperty="per_library"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Run bam-readcount" toProperty="variant_type"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="version" toOperation="Run bam-readcount" toProperty="version"/>
      <link fromOperation="Run bam-readcount" fromProperty="output_result" toOperation="Annotate vcf with readcounts" toProperty="readcount_results"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Annotate vcf with readcounts" toProperty="input_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from provider and plan" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="provider_json" toOperation="Get inputs from provider and plan" toProperty="provider_json"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from provider and plan" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run bam-readcount" toProperty="input_vcf"/>
    </operation>
    <operation name="Generate Reports">
      <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::ReportGenerator">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>output_directory</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>translations</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_directory</outputproperty>
        <outputproperty>result</outputproperty>
      </operationtype>
    </operation>
    <operation name="dbsnp">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>provider_json</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>output_vcf</outputproperty>
      </operationtype>
      <operation name="Get inputs from provider and plan">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Joinx::Dbsnp::Adaptor">
          <inputproperty>plan_json</inputproperty>
          <inputproperty>provider_json</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>info_string</outputproperty>
          <outputproperty>joinx_version</outputproperty>
          <outputproperty>result</outputproperty>
          <outputproperty>variant_type</outputproperty>
          <outputproperty>vcf</outputproperty>
        </operationtype>
      </operation>
      <operation name="Run dbsnp">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Joinx::Run">
          <inputproperty>info_string</inputproperty>
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>joinx_version</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <inputproperty>vcf</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <link fromOperation="Get inputs from provider and plan" fromProperty="info_string" toOperation="Run dbsnp" toProperty="info_string"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="joinx_version" toOperation="Run dbsnp" toProperty="joinx_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Run dbsnp" toProperty="variant_type"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="vcf" toOperation="Run dbsnp" toProperty="vcf"/>
      <link fromOperation="Run dbsnp" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
      <link fromOperation="Run dbsnp" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from provider and plan" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="provider_json" toOperation="Get inputs from provider and plan" toProperty="provider_json"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from provider and plan" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run dbsnp" toProperty="input_vcf"/>
    </operation>
    <operation name="vep">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>provider_json</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>output_vcf</outputproperty>
      </operationtype>
      <operation name="Get inputs from provider and plan">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Vep::Adaptor">
          <inputproperty>plan_json</inputproperty>
          <inputproperty>provider_json</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>custom_annotation_tags</outputproperty>
          <outputproperty>ensembl_version</outputproperty>
          <outputproperty>feature_list_ids</outputproperty>
          <outputproperty>joinx_version</outputproperty>
          <outputproperty>plugins</outputproperty>
          <outputproperty>plugins_version</outputproperty>
          <outputproperty>reference_fasta</outputproperty>
          <outputproperty>result</outputproperty>
          <outputproperty>species</outputproperty>
          <outputproperty>variant_type</outputproperty>
        </operationtype>
      </operation>
      <operation name="Run vep">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;32000] rusage[mem=32000]' -M 32000000" commandClass="Genome::VariantReporting::Vep::Run">
          <inputproperty>ensembl_version</inputproperty>
          <inputproperty>feature_list_ids</inputproperty>
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>joinx_version</inputproperty>
          <inputproperty>plugins_version</inputproperty>
          <inputproperty>reference_fasta</inputproperty>
          <inputproperty>species</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <link fromOperation="Get inputs from provider and plan" fromProperty="custom_annotation_tags" toOperation="Run vep" toProperty="custom_annotation_tags"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="ensembl_version" toOperation="Run vep" toProperty="ensembl_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="feature_list_ids" toOperation="Run vep" toProperty="feature_list_ids"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="joinx_version" toOperation="Run vep" toProperty="joinx_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="plugins_version" toOperation="Run vep" toProperty="plugins_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="plugins" toOperation="Run vep" toProperty="plugins"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="reference_fasta" toOperation="Run vep" toProperty="reference_fasta"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="species" toOperation="Run vep" toProperty="species"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Run vep" toProperty="variant_type"/>
      <link fromOperation="Run vep" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
      <link fromOperation="Run vep" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from provider and plan" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="provider_json" toOperation="Get inputs from provider and plan" toProperty="provider_json"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from provider and plan" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run vep" toProperty="input_vcf"/>
    </operation>
    <link fromOperation="BamReadcount" fromProperty="output_vcf" toOperation="dbsnp" toProperty="input_vcf"/>
    <link fromOperation="Generate Reports" fromProperty="output_directory" toOperation="output connector" toProperty="output_directory"/>
    <link fromOperation="dbsnp" fromProperty="output_vcf" toOperation="Generate Reports" toProperty="input_vcf"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="BamReadcount" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="provider_json" toOperation="BamReadcount" toProperty="provider_json"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="BamReadcount" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="output_directory" toOperation="Generate Reports" toProperty="output_directory"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Reports" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="translations" toOperation="Generate Reports" toProperty="translations"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Reports" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="dbsnp" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="provider_json" toOperation="dbsnp" toProperty="provider_json"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="dbsnp" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="input_vcf" toOperation="vep" toProperty="input_vcf"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="vep" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="provider_json" toOperation="vep" toProperty="provider_json"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="vep" toProperty="variant_type"/>
    <link fromOperation="vep" fromProperty="output_vcf" toOperation="BamReadcount" toProperty="input_vcf"/>
  </operation>
  <operation name="Variant Reporting (snvs) 8" logDir="/tmp/gm-genome_sys-2014-09-24_12_55_27--AzAi/anonymous12/additional/test_roi/logs_snvs">
    <operationtype typeClass="Workflow::OperationType::Model">
      <inputproperty>input_vcf</inputproperty>
      <inputproperty>output_directory</inputproperty>
      <inputproperty>plan_json</inputproperty>
      <inputproperty>provider_json</inputproperty>
      <inputproperty>translations</inputproperty>
      <inputproperty>variant_type</inputproperty>
      <outputproperty>output_directory</outputproperty>
    </operationtype>
    <operation name="BamReadcount">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>provider_json</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_vcf</outputproperty>
      </operationtype>
      <operation name="Annotate vcf with readcounts">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::BamReadcount::Annotate">
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>readcount_results</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <operation name="Get inputs from provider and plan">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::BamReadcount::Adaptor">
          <inputproperty>plan_json</inputproperty>
          <inputproperty>provider_json</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>aligned_bam_result_id</outputproperty>
          <outputproperty>insertion_centric</outputproperty>
          <outputproperty>max_count</outputproperty>
          <outputproperty>minimum_base_quality</outputproperty>
          <outputproperty>minimum_mapping_quality</outputproperty>
          <outputproperty>per_library</outputproperty>
          <outputproperty>result</outputproperty>
          <outputproperty>variant_type</outputproperty>
          <outputproperty>version</outputproperty>
        </operationtype>
      </operation>
      <operation name="Run bam-readcount" parallelBy="aligned_bam_result_id">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::BamReadcount::Run">
          <inputproperty>aligned_bam_result_id</inputproperty>
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>insertion_centric</inputproperty>
          <inputproperty>max_count</inputproperty>
          <inputproperty>minimum_base_quality</inputproperty>
          <inputproperty>minimum_mapping_quality</inputproperty>
          <inputproperty>per_library</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <inputproperty>version</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <link fromOperation="Annotate vcf with readcounts" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Annotate vcf with readcounts" toProperty="variant_type"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="aligned_bam_result_id" toOperation="Run bam-readcount" toProperty="aligned_bam_result_id"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="insertion_centric" toOperation="Run bam-readcount" toProperty="insertion_centric"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="max_count" toOperation="Run bam-readcount" toProperty="max_count"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="minimum_base_quality" toOperation="Run bam-readcount" toProperty="minimum_base_quality"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="minimum_mapping_quality" toOperation="Run bam-readcount" toProperty="minimum_mapping_quality"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="per_library" toOperation="Run bam-readcount" toProperty="per_library"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Run bam-readcount" toProperty="variant_type"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="version" toOperation="Run bam-readcount" toProperty="version"/>
      <link fromOperation="Run bam-readcount" fromProperty="output_result" toOperation="Annotate vcf with readcounts" toProperty="readcount_results"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Annotate vcf with readcounts" toProperty="input_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from provider and plan" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="provider_json" toOperation="Get inputs from provider and plan" toProperty="provider_json"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from provider and plan" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run bam-readcount" toProperty="input_vcf"/>
    </operation>
    <operation name="Generate Reports">
      <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;16000] rusage[mem=16000]' -M 16000000" commandClass="Genome::VariantReporting::Framework::ReportGenerator">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>output_directory</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>translations</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_directory</outputproperty>
        <outputproperty>result</outputproperty>
      </operationtype>
    </operation>
    <operation name="dbsnp">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>provider_json</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>output_vcf</outputproperty>
      </operationtype>
      <operation name="Get inputs from provider and plan">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Joinx::Dbsnp::Adaptor">
          <inputproperty>plan_json</inputproperty>
          <inputproperty>provider_json</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>info_string</outputproperty>
          <outputproperty>joinx_version</outputproperty>
          <outputproperty>result</outputproperty>
          <outputproperty>variant_type</outputproperty>
          <outputproperty>vcf</outputproperty>
        </operationtype>
      </operation>
      <operation name="Run dbsnp">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Joinx::Run">
          <inputproperty>info_string</inputproperty>
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>joinx_version</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <inputproperty>vcf</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <link fromOperation="Get inputs from provider and plan" fromProperty="info_string" toOperation="Run dbsnp" toProperty="info_string"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="joinx_version" toOperation="Run dbsnp" toProperty="joinx_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Run dbsnp" toProperty="variant_type"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="vcf" toOperation="Run dbsnp" toProperty="vcf"/>
      <link fromOperation="Run dbsnp" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
      <link fromOperation="Run dbsnp" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from provider and plan" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="provider_json" toOperation="Get inputs from provider and plan" toProperty="provider_json"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from provider and plan" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run dbsnp" toProperty="input_vcf"/>
    </operation>
    <operation name="vep">
      <operationtype typeClass="Workflow::OperationType::Model">
        <inputproperty>input_vcf</inputproperty>
        <inputproperty>plan_json</inputproperty>
        <inputproperty>provider_json</inputproperty>
        <inputproperty>variant_type</inputproperty>
        <outputproperty>output_result</outputproperty>
        <outputproperty>output_vcf</outputproperty>
      </operationtype>
      <operation name="Get inputs from provider and plan">
        <operationtype typeClass="Workflow::OperationType::Command" commandClass="Genome::VariantReporting::Vep::Adaptor">
          <inputproperty>plan_json</inputproperty>
          <inputproperty>provider_json</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>custom_annotation_tags</outputproperty>
          <outputproperty>ensembl_version</outputproperty>
          <outputproperty>feature_list_ids</outputproperty>
          <outputproperty>joinx_version</outputproperty>
          <outputproperty>plugins</outputproperty>
          <outputproperty>plugins_version</outputproperty>
          <outputproperty>reference_fasta</outputproperty>
          <outputproperty>result</outputproperty>
          <outputproperty>species</outputproperty>
          <outputproperty>variant_type</outputproperty>
        </operationtype>
      </operation>
      <operation name="Run vep">
        <operationtype typeClass="Workflow::OperationType::Command" lsfResource="-R 'select[mem&gt;32000] rusage[mem=32000]' -M 32000000" commandClass="Genome::VariantReporting::Vep::Run">
          <inputproperty>ensembl_version</inputproperty>
          <inputproperty>feature_list_ids</inputproperty>
          <inputproperty>input_vcf</inputproperty>
          <inputproperty>joinx_version</inputproperty>
          <inputproperty>plugins_version</inputproperty>
          <inputproperty>reference_fasta</inputproperty>
          <inputproperty>species</inputproperty>
          <inputproperty>variant_type</inputproperty>
          <outputproperty>output_result</outputproperty>
          <outputproperty>output_vcf</outputproperty>
          <outputproperty>result</outputproperty>
        </operationtype>
      </operation>
      <link fromOperation="Get inputs from provider and plan" fromProperty="custom_annotation_tags" toOperation="Run vep" toProperty="custom_annotation_tags"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="ensembl_version" toOperation="Run vep" toProperty="ensembl_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="feature_list_ids" toOperation="Run vep" toProperty="feature_list_ids"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="joinx_version" toOperation="Run vep" toProperty="joinx_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="plugins_version" toOperation="Run vep" toProperty="plugins_version"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="plugins" toOperation="Run vep" toProperty="plugins"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="reference_fasta" toOperation="Run vep" toProperty="reference_fasta"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="species" toOperation="Run vep" toProperty="species"/>
      <link fromOperation="Get inputs from provider and plan" fromProperty="variant_type" toOperation="Run vep" toProperty="variant_type"/>
      <link fromOperation="Run vep" fromProperty="output_result" toOperation="output connector" toProperty="output_result"/>
      <link fromOperation="Run vep" fromProperty="output_vcf" toOperation="output connector" toProperty="output_vcf"/>
      <link fromOperation="input connector" fromProperty="plan_json" toOperation="Get inputs from provider and plan" toProperty="plan_json"/>
      <link fromOperation="input connector" fromProperty="provider_json" toOperation="Get inputs from provider and plan" toProperty="provider_json"/>
      <link fromOperation="input connector" fromProperty="variant_type" toOperation="Get inputs from provider and plan" toProperty="variant_type"/>
      <link fromOperation="input connector" fromProperty="input_vcf" toOperation="Run vep" toProperty="input_vcf"/>
    </operation>
    <link fromOperation="BamReadcount" fromProperty="output_vcf" toOperation="dbsnp" toProperty="input_vcf"/>
    <link fromOperation="Generate Reports" fromProperty="output_directory" toOperation="output connector" toProperty="output_directory"/>
    <link fromOperation="dbsnp" fromProperty="output_vcf" toOperation="Generate Reports" toProperty="input_vcf"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="BamReadcount" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="provider_json" toOperation="BamReadcount" toProperty="provider_json"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="BamReadcount" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="output_directory" toOperation="Generate Reports" toProperty="output_directory"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="Generate Reports" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="translations" toOperation="Generate Reports" toProperty="translations"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="Generate Reports" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="dbsnp" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="provider_json" toOperation="dbsnp" toProperty="provider_json"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="dbsnp" toProperty="variant_type"/>
    <link fromOperation="input connector" fromProperty="input_vcf" toOperation="vep" toProperty="input_vcf"/>
    <link fromOperation="input connector" fromProperty="plan_json" toOperation="vep" toProperty="plan_json"/>
    <link fromOperation="input connector" fromProperty="provider_json" toOperation="vep" toProperty="provider_json"/>
    <link fromOperation="input connector" fromProperty="variant_type" toOperation="vep" toProperty="variant_type"/>
    <link fromOperation="vep" fromProperty="output_vcf" toOperation="BamReadcount" toProperty="input_vcf"/>
  </operation>
  <link fromOperation="Combine snv and indel 10" fromProperty="output_file" toOperation="Final Converge" toProperty="Combine snv and indel 10"/>
  <link fromOperation="Combine snv and indel 11" fromProperty="output_file" toOperation="Final Converge" toProperty="Combine snv and indel 11"/>
  <link fromOperation="Combine snv and indel 2" fromProperty="output_file" toOperation="Final Converge" toProperty="Combine snv and indel 2"/>
  <link fromOperation="Combine snv and indel 3" fromProperty="output_file" toOperation="Final Converge" toProperty="Combine snv and indel 3"/>
  <link fromOperation="Combine snv and indel 6" fromProperty="output_file" toOperation="Final Converge" toProperty="Combine snv and indel 6"/>
  <link fromOperation="Combine snv and indel 7" fromProperty="output_file" toOperation="Final Converge" toProperty="Combine snv and indel 7"/>
  <link fromOperation="Converge 10" fromProperty="output_dirs" toOperation="Generate filenames 10" toProperty="input_directories"/>
  <link fromOperation="Converge 11" fromProperty="output_dirs" toOperation="Generate filenames 11" toProperty="input_directories"/>
  <link fromOperation="Converge 2" fromProperty="output_dirs" toOperation="Generate filenames 2" toProperty="input_directories"/>
  <link fromOperation="Converge 3" fromProperty="output_dirs" toOperation="Generate filenames 3" toProperty="input_directories"/>
  <link fromOperation="Converge 6" fromProperty="output_dirs" toOperation="Generate filenames 6" toProperty="input_directories"/>
  <link fromOperation="Converge 7" fromProperty="output_dirs" toOperation="Generate filenames 7" toProperty="input_directories"/>
  <link fromOperation="Final Converge" fromProperty="reports" toOperation="output connector" toProperty="reports"/>
  <link fromOperation="Generate filenames 10" fromProperty="reports" toOperation="Combine snv and indel 10" toProperty="reports"/>
  <link fromOperation="Generate filenames 11" fromProperty="reports" toOperation="Combine snv and indel 11" toProperty="reports"/>
  <link fromOperation="Generate filenames 2" fromProperty="reports" toOperation="Combine snv and indel 2" toProperty="reports"/>
  <link fromOperation="Generate filenames 3" fromProperty="reports" toOperation="Combine snv and indel 3" toProperty="reports"/>
  <link fromOperation="Generate filenames 6" fromProperty="reports" toOperation="Combine snv and indel 6" toProperty="reports"/>
  <link fromOperation="Generate filenames 7" fromProperty="reports" toOperation="Combine snv and indel 7" toProperty="reports"/>
  <link fromOperation="Variant Reporting (indels) 1" fromProperty="output_directory" toOperation="Converge 2" toProperty="indels_output_dir"/>
  <link fromOperation="Variant Reporting (indels) 1" fromProperty="output_directory" toOperation="Converge 3" toProperty="indels_output_dir"/>
  <link fromOperation="Variant Reporting (indels) 5" fromProperty="output_directory" toOperation="Converge 6" toProperty="indels_output_dir"/>
  <link fromOperation="Variant Reporting (indels) 5" fromProperty="output_directory" toOperation="Converge 7" toProperty="indels_output_dir"/>
  <link fromOperation="Variant Reporting (indels) 9" fromProperty="output_directory" toOperation="Converge 10" toProperty="indels_output_dir"/>
  <link fromOperation="Variant Reporting (indels) 9" fromProperty="output_directory" toOperation="Converge 11" toProperty="indels_output_dir"/>
  <link fromOperation="Variant Reporting (snvs) 0" fromProperty="output_directory" toOperation="Converge 2" toProperty="snvs_output_dir"/>
  <link fromOperation="Variant Reporting (snvs) 0" fromProperty="output_directory" toOperation="Converge 3" toProperty="snvs_output_dir"/>
  <link fromOperation="Variant Reporting (snvs) 4" fromProperty="output_directory" toOperation="Converge 6" toProperty="snvs_output_dir"/>
  <link fromOperation="Variant Reporting (snvs) 4" fromProperty="output_directory" toOperation="Converge 7" toProperty="snvs_output_dir"/>
  <link fromOperation="Variant Reporting (snvs) 8" fromProperty="output_directory" toOperation="Converge 10" toProperty="snvs_output_dir"/>
  <link fromOperation="Variant Reporting (snvs) 8" fromProperty="output_directory" toOperation="Converge 11" toProperty="snvs_output_dir"/>
  <link fromOperation="input connector" fromProperty="contains_header_10" toOperation="Combine snv and indel 10" toProperty="contains_header"/>
  <link fromOperation="input connector" fromProperty="output_file_10" toOperation="Combine snv and indel 10" toProperty="output_file"/>
  <link fromOperation="input connector" fromProperty="separator_10" toOperation="Combine snv and indel 10" toProperty="separator"/>
  <link fromOperation="input connector" fromProperty="sort_columns_10" toOperation="Combine snv and indel 10" toProperty="sort_columns"/>
  <link fromOperation="input connector" fromProperty="split_indicators_10" toOperation="Combine snv and indel 10" toProperty="split_indicators"/>
  <link fromOperation="input connector" fromProperty="contains_header_11" toOperation="Combine snv and indel 11" toProperty="contains_header"/>
  <link fromOperation="input connector" fromProperty="output_file_11" toOperation="Combine snv and indel 11" toProperty="output_file"/>
  <link fromOperation="input connector" fromProperty="separator_11" toOperation="Combine snv and indel 11" toProperty="separator"/>
  <link fromOperation="input connector" fromProperty="sort_columns_11" toOperation="Combine snv and indel 11" toProperty="sort_columns"/>
  <link fromOperation="input connector" fromProperty="split_indicators_11" toOperation="Combine snv and indel 11" toProperty="split_indicators"/>
  <link fromOperation="input connector" fromProperty="contains_header_2" toOperation="Combine snv and indel 2" toProperty="contains_header"/>
  <link fromOperation="input connector" fromProperty="output_file_2" toOperation="Combine snv and indel 2" toProperty="output_file"/>
  <link fromOperation="input connector" fromProperty="separator_2" toOperation="Combine snv and indel 2" toProperty="separator"/>
  <link fromOperation="input connector" fromProperty="sort_columns_2" toOperation="Combine snv and indel 2" toProperty="sort_columns"/>
  <link fromOperation="input connector" fromProperty="split_indicators_2" toOperation="Combine snv and indel 2" toProperty="split_indicators"/>
  <link fromOperation="input connector" fromProperty="contains_header_3" toOperation="Combine snv and indel 3" toProperty="contains_header"/>
  <link fromOperation="input connector" fromProperty="output_file_3" toOperation="Combine snv and indel 3" toProperty="output_file"/>
  <link fromOperation="input connector" fromProperty="separator_3" toOperation="Combine snv and indel 3" toProperty="separator"/>
  <link fromOperation="input connector" fromProperty="sort_columns_3" toOperation="Combine snv and indel 3" toProperty="sort_columns"/>
  <link fromOperation="input connector" fromProperty="split_indicators_3" toOperation="Combine snv and indel 3" toProperty="split_indicators"/>
  <link fromOperation="input connector" fromProperty="contains_header_6" toOperation="Combine snv and indel 6" toProperty="contains_header"/>
  <link fromOperation="input connector" fromProperty="output_file_6" toOperation="Combine snv and indel 6" toProperty="output_file"/>
  <link fromOperation="input connector" fromProperty="separator_6" toOperation="Combine snv and indel 6" toProperty="separator"/>
  <link fromOperation="input connector" fromProperty="sort_columns_6" toOperation="Combine snv and indel 6" toProperty="sort_columns"/>
  <link fromOperation="input connector" fromProperty="split_indicators_6" toOperation="Combine snv and indel 6" toProperty="split_indicators"/>
  <link fromOperation="input connector" fromProperty="contains_header_7" toOperation="Combine snv and indel 7" toProperty="contains_header"/>
  <link fromOperation="input connector" fromProperty="output_file_7" toOperation="Combine snv and indel 7" toProperty="output_file"/>
  <link fromOperation="input connector" fromProperty="separator_7" toOperation="Combine snv and indel 7" toProperty="separator"/>
  <link fromOperation="input connector" fromProperty="sort_columns_7" toOperation="Combine snv and indel 7" toProperty="sort_columns"/>
  <link fromOperation="input connector" fromProperty="split_indicators_7" toOperation="Combine snv and indel 7" toProperty="split_indicators"/>
  <link fromOperation="input connector" fromProperty="file_name_10" toOperation="Generate filenames 10" toProperty="file_name"/>
  <link fromOperation="input connector" fromProperty="file_name_11" toOperation="Generate filenames 11" toProperty="file_name"/>
  <link fromOperation="input connector" fromProperty="file_name_2" toOperation="Generate filenames 2" toProperty="file_name"/>
  <link fromOperation="input connector" fromProperty="file_name_3" toOperation="Generate filenames 3" toProperty="file_name"/>
  <link fromOperation="input connector" fromProperty="file_name_6" toOperation="Generate filenames 6" toProperty="file_name"/>
  <link fromOperation="input connector" fromProperty="file_name_7" toOperation="Generate filenames 7" toProperty="file_name"/>
  <link fromOperation="input connector" fromProperty="input_vcf_1" toOperation="Variant Reporting (indels) 1" toProperty="input_vcf"/>
  <link fromOperation="input connector" fromProperty="output_directory_1" toOperation="Variant Reporting (indels) 1" toProperty="output_directory"/>
  <link fromOperation="input connector" fromProperty="plan_json_1" toOperation="Variant Reporting (indels) 1" toProperty="plan_json"/>
  <link fromOperation="input connector" fromProperty="provider_json_1" toOperation="Variant Reporting (indels) 1" toProperty="provider_json"/>
  <link fromOperation="input connector" fromProperty="translations_1" toOperation="Variant Reporting (indels) 1" toProperty="translations"/>
  <link fromOperation="input connector" fromProperty="variant_type_1" toOperation="Variant Reporting (indels) 1" toProperty="variant_type"/>
  <link fromOperation="input connector" fromProperty="input_vcf_5" toOperation="Variant Reporting (indels) 5" toProperty="input_vcf"/>
  <link fromOperation="input connector" fromProperty="output_directory_5" toOperation="Variant Reporting (indels) 5" toProperty="output_directory"/>
  <link fromOperation="input connector" fromProperty="plan_json_5" toOperation="Variant Reporting (indels) 5" toProperty="plan_json"/>
  <link fromOperation="input connector" fromProperty="provider_json_5" toOperation="Variant Reporting (indels) 5" toProperty="provider_json"/>
  <link fromOperation="input connector" fromProperty="translations_5" toOperation="Variant Reporting (indels) 5" toProperty="translations"/>
  <link fromOperation="input connector" fromProperty="variant_type_5" toOperation="Variant Reporting (indels) 5" toProperty="variant_type"/>
  <link fromOperation="input connector" fromProperty="input_vcf_9" toOperation="Variant Reporting (indels) 9" toProperty="input_vcf"/>
  <link fromOperation="input connector" fromProperty="output_directory_9" toOperation="Variant Reporting (indels) 9" toProperty="output_directory"/>
  <link fromOperation="input connector" fromProperty="plan_json_9" toOperation="Variant Reporting (indels) 9" toProperty="plan_json"/>
  <link fromOperation="input connector" fromProperty="provider_json_9" toOperation="Variant Reporting (indels) 9" toProperty="provider_json"/>
  <link fromOperation="input connector" fromProperty="translations_9" toOperation="Variant Reporting (indels) 9" toProperty="translations"/>
  <link fromOperation="input connector" fromProperty="variant_type_9" toOperation="Variant Reporting (indels) 9" toProperty="variant_type"/>
  <link fromOperation="input connector" fromProperty="input_vcf_0" toOperation="Variant Reporting (snvs) 0" toProperty="input_vcf"/>
  <link fromOperation="input connector" fromProperty="output_directory_0" toOperation="Variant Reporting (snvs) 0" toProperty="output_directory"/>
  <link fromOperation="input connector" fromProperty="plan_json_0" toOperation="Variant Reporting (snvs) 0" toProperty="plan_json"/>
  <link fromOperation="input connector" fromProperty="provider_json_0" toOperation="Variant Reporting (snvs) 0" toProperty="provider_json"/>
  <link fromOperation="input connector" fromProperty="translations_0" toOperation="Variant Reporting (snvs) 0" toProperty="translations"/>
  <link fromOperation="input connector" fromProperty="variant_type_0" toOperation="Variant Reporting (snvs) 0" toProperty="variant_type"/>
  <link fromOperation="input connector" fromProperty="input_vcf_4" toOperation="Variant Reporting (snvs) 4" toProperty="input_vcf"/>
  <link fromOperation="input connector" fromProperty="output_directory_4" toOperation="Variant Reporting (snvs) 4" toProperty="output_directory"/>
  <link fromOperation="input connector" fromProperty="plan_json_4" toOperation="Variant Reporting (snvs) 4" toProperty="plan_json"/>
  <link fromOperation="input connector" fromProperty="provider_json_4" toOperation="Variant Reporting (snvs) 4" toProperty="provider_json"/>
  <link fromOperation="input connector" fromProperty="translations_4" toOperation="Variant Reporting (snvs) 4" toProperty="translations"/>
  <link fromOperation="input connector" fromProperty="variant_type_4" toOperation="Variant Reporting (snvs) 4" toProperty="variant_type"/>
  <link fromOperation="input connector" fromProperty="input_vcf_8" toOperation="Variant Reporting (snvs) 8" toProperty="input_vcf"/>
  <link fromOperation="input connector" fromProperty="output_directory_8" toOperation="Variant Reporting (snvs) 8" toProperty="output_directory"/>
  <link fromOperation="input connector" fromProperty="plan_json_8" toOperation="Variant Reporting (snvs) 8" toProperty="plan_json"/>
  <link fromOperation="input connector" fromProperty="provider_json_8" toOperation="Variant Reporting (snvs) 8" toProperty="provider_json"/>
  <link fromOperation="input connector" fromProperty="translations_8" toOperation="Variant Reporting (snvs) 8" toProperty="translations"/>
  <link fromOperation="input connector" fromProperty="variant_type_8" toOperation="Variant Reporting (snvs) 8" toProperty="variant_type"/>
</operation>
